{
  "description": "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.",
  "properties": {
    "resourceType": {
      "description": "This is a Subscription resource",
      "enum": ["Subscription"],
      "title": "\"Subscription\""
    },
    "implicitRules": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource",
      "title": "uri"
    },
    "language": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents",
      "title": "code"
    },
    "status": {
      "description": "The status of the subscription, which marks the server state for managing the subscription.",
      "enum": ["requested", "active", "error", "off"],
      "title": "\"requested\"|\"active\"|\"error\"|\"off\""
    },
    "contact": {
      "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
      "items": {
        "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
        "properties": {
          "system": {
            "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
            "enum": ["phone", "fax", "email", "pager", "url", "sms", "other"],
            "title": "\"phone\"|\"fax\"|\"email\"|\"pager\"|\"url\"|\"sms\"|\"other\""
          },
          "value": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters",
            "title": "string"
          },
          "use": {
            "description": "Identifies the purpose for the contact point.",
            "enum": ["home", "work", "temp", "old", "mobile"],
            "title": "\"home\"|\"work\"|\"temp\"|\"old\"|\"mobile\""
          },
          "rank": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)",
            "title": "positiveInt"
          },
          "period": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.",
                "title": "dateTime"
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.",
                "title": "dateTime"
              }
            },
            "additionalProperties": false,
            "title": "Period"
          }
        },
        "additionalProperties": false,
        "title": "ContactPoint"
      },
      "type": "array"
    },
    "end": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
      "type": "string",
      "description": "An instant in time - known at least to the second",
      "title": "instant"
    },
    "reason": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters",
      "title": "string"
    },
    "criteria": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters",
      "title": "string"
    },
    "error": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters",
      "title": "string"
    },
    "channel": {
      "description": "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.",
      "properties": {
        "type": {
          "description": "The type of channel to send notifications on.",
          "enum": ["rest-hook", "websocket", "email", "sms", "message"],
          "title": "\"rest-hook\"|\"websocket\"|\"email\"|\"sms\"|\"message\""
        },
        "endpoint": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "A URI that is a literal reference",
          "title": "url"
        },
        "payload": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string",
          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents",
          "title": "code"
        },
        "header": {
          "description": "Additional headers / information to send as part of the notification.",
          "items": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters",
            "title": "string"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "title": "Subscription_Channel"
    },
    "_id": {
      "bsonType": "objectId"
    }
  },
  "additionalProperties": false,
  "required": ["channel", "resourceType"]
}
