/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../context"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AccessControlListRelationFilter: { // input type
    every?: NexusGenInputs['AccessControlWhereInput'] | null; // AccessControlWhereInput
    none?: NexusGenInputs['AccessControlWhereInput'] | null; // AccessControlWhereInput
    some?: NexusGenInputs['AccessControlWhereInput'] | null; // AccessControlWhereInput
  }
  AccessControlWhereInput: { // input type
    AND?: NexusGenInputs['AccessControlWhereInput'][] | null; // [AccessControlWhereInput!]
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['AccessControlWhereInput'][] | null; // [AccessControlWhereInput!]
    OR?: NexusGenInputs['AccessControlWhereInput'][] | null; // [AccessControlWhereInput!]
    role?: NexusGenInputs['EnumSourceRoleFilter'] | null; // EnumSourceRoleFilter
    source?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
    sourceId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    user?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    userId?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  AccessControlWhereUniqueInput: { // input type
    AccessControl_user_source?: NexusGenInputs['AccessControl_user_sourceCompoundUniqueInput'] | null; // AccessControl_user_sourceCompoundUniqueInput
    id?: string | null; // String
  }
  AccessControl_user_sourceCompoundUniqueInput: { // input type
    sourceId: string; // String!
    userId: string; // String!
  }
  AttributeInput: { // input type
    mergingScript?: string | null; // String
  }
  AttributeListRelationFilter: { // input type
    every?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
    none?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
    some?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
  }
  AttributeWhereInput: { // input type
    AND?: NexusGenInputs['AttributeWhereInput'][] | null; // [AttributeWhereInput!]
    comments?: NexusGenInputs['CommentListRelationFilter'] | null; // CommentListRelationFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    definitionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    inputGroups?: NexusGenInputs['InputGroupListRelationFilter'] | null; // InputGroupListRelationFilter
    NOT?: NexusGenInputs['AttributeWhereInput'][] | null; // [AttributeWhereInput!]
    OR?: NexusGenInputs['AttributeWhereInput'][] | null; // [AttributeWhereInput!]
    path?: NexusGenInputs['StringFilter'] | null; // StringFilter
    resource?: NexusGenInputs['ResourceWhereInput'] | null; // ResourceWhereInput
    resourceId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    sliceName?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  AttributeWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  BoolFilter: { // input type
    equals?: boolean | null; // Boolean
    not?: NexusGenInputs['NestedBoolFilter'] | null; // NestedBoolFilter
  }
  ColumnInput: { // input type
    column: string; // String!
    joins?: NexusGenInputs['JoinInput'][] | null; // [JoinInput!]
    table: string; // String!
  }
  ColumnInputWithoutJoins: { // input type
    column?: string | null; // String
    table?: string | null; // String
  }
  ColumnListRelationFilter: { // input type
    every?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    none?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    some?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
  }
  ColumnWhereInput: { // input type
    AND?: NexusGenInputs['ColumnWhereInput'][] | null; // [ColumnWhereInput!]
    column?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    condition?: NexusGenInputs['ConditionWhereInput'] | null; // ConditionWhereInput
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    filter?: NexusGenInputs['FilterWhereInput'] | null; // FilterWhereInput
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    input?: NexusGenInputs['InputWhereInput'] | null; // InputWhereInput
    join?: NexusGenInputs['JoinWhereInput'] | null; // JoinWhereInput
    joinId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    joins?: NexusGenInputs['JoinListRelationFilter'] | null; // JoinListRelationFilter
    NOT?: NexusGenInputs['ColumnWhereInput'][] | null; // [ColumnWhereInput!]
    OR?: NexusGenInputs['ColumnWhereInput'][] | null; // [ColumnWhereInput!]
    table?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  ColumnWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  CommentListRelationFilter: { // input type
    every?: NexusGenInputs['CommentWhereInput'] | null; // CommentWhereInput
    none?: NexusGenInputs['CommentWhereInput'] | null; // CommentWhereInput
    some?: NexusGenInputs['CommentWhereInput'] | null; // CommentWhereInput
  }
  CommentWhereInput: { // input type
    AND?: NexusGenInputs['CommentWhereInput'][] | null; // [CommentWhereInput!]
    attribute?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
    attributeId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    author?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    authorId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    content?: NexusGenInputs['StringFilter'] | null; // StringFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['CommentWhereInput'][] | null; // [CommentWhereInput!]
    OR?: NexusGenInputs['CommentWhereInput'][] | null; // [CommentWhereInput!]
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    validation?: NexusGenInputs['BoolFilter'] | null; // BoolFilter
  }
  CommentWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  ConditionListRelationFilter: { // input type
    every?: NexusGenInputs['ConditionWhereInput'] | null; // ConditionWhereInput
    none?: NexusGenInputs['ConditionWhereInput'] | null; // ConditionWhereInput
    some?: NexusGenInputs['ConditionWhereInput'] | null; // ConditionWhereInput
  }
  ConditionWhereInput: { // input type
    action?: NexusGenInputs['EnumConditionActionNullableFilter'] | null; // EnumConditionActionNullableFilter
    AND?: NexusGenInputs['ConditionWhereInput'][] | null; // [ConditionWhereInput!]
    columnId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    inputGroup?: NexusGenInputs['InputGroupWhereInput'] | null; // InputGroupWhereInput
    inputGroupId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['ConditionWhereInput'][] | null; // [ConditionWhereInput!]
    OR?: NexusGenInputs['ConditionWhereInput'][] | null; // [ConditionWhereInput!]
    relation?: NexusGenInputs['EnumConditionRelationFilter'] | null; // EnumConditionRelationFilter
    sqlValue?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    value?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
  }
  ConditionWhereUniqueInput: { // input type
    columnId?: string | null; // String
    id?: string | null; // String
  }
  CredentialWhereInput: { // input type
    AND?: NexusGenInputs['CredentialWhereInput'][] | null; // [CredentialWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    database?: NexusGenInputs['StringFilter'] | null; // StringFilter
    host?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    login?: NexusGenInputs['StringFilter'] | null; // StringFilter
    model?: NexusGenInputs['EnumDatabaseTypeFilter'] | null; // EnumDatabaseTypeFilter
    NOT?: NexusGenInputs['CredentialWhereInput'][] | null; // [CredentialWhereInput!]
    OR?: NexusGenInputs['CredentialWhereInput'][] | null; // [CredentialWhereInput!]
    owner?: NexusGenInputs['StringFilter'] | null; // StringFilter
    password?: NexusGenInputs['StringFilter'] | null; // StringFilter
    port?: NexusGenInputs['StringFilter'] | null; // StringFilter
    schema?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    source?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
    sourceId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  CredentialWhereUniqueInput: { // input type
    id?: string | null; // String
    sourceId?: string | null; // String
  }
  DateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  EnumConditionActionNullableFilter: { // input type
    equals?: NexusGenEnums['ConditionAction'] | null; // ConditionAction
    in?: NexusGenEnums['ConditionAction'][] | null; // [ConditionAction!]
    not?: NexusGenInputs['NestedEnumConditionActionNullableFilter'] | null; // NestedEnumConditionActionNullableFilter
    notIn?: NexusGenEnums['ConditionAction'][] | null; // [ConditionAction!]
  }
  EnumConditionRelationFilter: { // input type
    equals?: NexusGenEnums['ConditionRelation'] | null; // ConditionRelation
    in?: NexusGenEnums['ConditionRelation'][] | null; // [ConditionRelation!]
    not?: NexusGenInputs['NestedEnumConditionRelationFilter'] | null; // NestedEnumConditionRelationFilter
    notIn?: NexusGenEnums['ConditionRelation'][] | null; // [ConditionRelation!]
  }
  EnumDatabaseTypeFilter: { // input type
    equals?: NexusGenEnums['DatabaseType'] | null; // DatabaseType
    in?: NexusGenEnums['DatabaseType'][] | null; // [DatabaseType!]
    not?: NexusGenInputs['NestedEnumDatabaseTypeFilter'] | null; // NestedEnumDatabaseTypeFilter
    notIn?: NexusGenEnums['DatabaseType'][] | null; // [DatabaseType!]
  }
  EnumRoleFilter: { // input type
    equals?: NexusGenEnums['Role'] | null; // Role
    in?: NexusGenEnums['Role'][] | null; // [Role!]
    not?: NexusGenInputs['NestedEnumRoleFilter'] | null; // NestedEnumRoleFilter
    notIn?: NexusGenEnums['Role'][] | null; // [Role!]
  }
  EnumSourceRoleFilter: { // input type
    equals?: NexusGenEnums['SourceRole'] | null; // SourceRole
    in?: NexusGenEnums['SourceRole'][] | null; // [SourceRole!]
    not?: NexusGenInputs['NestedEnumSourceRoleFilter'] | null; // NestedEnumSourceRoleFilter
    notIn?: NexusGenEnums['SourceRole'][] | null; // [SourceRole!]
  }
  FilterInput: { // input type
    relation: string; // String!
    sqlColumn: NexusGenInputs['ColumnInputWithoutJoins']; // ColumnInputWithoutJoins!
    value: string; // String!
  }
  FilterListRelationFilter: { // input type
    every?: NexusGenInputs['FilterWhereInput'] | null; // FilterWhereInput
    none?: NexusGenInputs['FilterWhereInput'] | null; // FilterWhereInput
    some?: NexusGenInputs['FilterWhereInput'] | null; // FilterWhereInput
  }
  FilterWhereInput: { // input type
    AND?: NexusGenInputs['FilterWhereInput'][] | null; // [FilterWhereInput!]
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['FilterWhereInput'][] | null; // [FilterWhereInput!]
    OR?: NexusGenInputs['FilterWhereInput'][] | null; // [FilterWhereInput!]
    relation?: NexusGenInputs['StringFilter'] | null; // StringFilter
    resource?: NexusGenInputs['ResourceWhereInput'] | null; // ResourceWhereInput
    resourceId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    sqlColumn?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    sqlColumnId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    value?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  InputGroupListRelationFilter: { // input type
    every?: NexusGenInputs['InputGroupWhereInput'] | null; // InputGroupWhereInput
    none?: NexusGenInputs['InputGroupWhereInput'] | null; // InputGroupWhereInput
    some?: NexusGenInputs['InputGroupWhereInput'] | null; // InputGroupWhereInput
  }
  InputGroupWhereInput: { // input type
    AND?: NexusGenInputs['InputGroupWhereInput'][] | null; // [InputGroupWhereInput!]
    attribute?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
    attributeId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    conditions?: NexusGenInputs['ConditionListRelationFilter'] | null; // ConditionListRelationFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    inputs?: NexusGenInputs['InputListRelationFilter'] | null; // InputListRelationFilter
    mergingScript?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    NOT?: NexusGenInputs['InputGroupWhereInput'][] | null; // [InputGroupWhereInput!]
    OR?: NexusGenInputs['InputGroupWhereInput'][] | null; // [InputGroupWhereInput!]
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  InputGroupWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  InputListRelationFilter: { // input type
    every?: NexusGenInputs['InputWhereInput'] | null; // InputWhereInput
    none?: NexusGenInputs['InputWhereInput'] | null; // InputWhereInput
    some?: NexusGenInputs['InputWhereInput'] | null; // InputWhereInput
  }
  InputWhereInput: { // input type
    AND?: NexusGenInputs['InputWhereInput'][] | null; // [InputWhereInput!]
    conceptMapId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    inputGroup?: NexusGenInputs['InputGroupWhereInput'] | null; // InputGroupWhereInput
    inputGroupId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    NOT?: NexusGenInputs['InputWhereInput'][] | null; // [InputWhereInput!]
    OR?: NexusGenInputs['InputWhereInput'][] | null; // [InputWhereInput!]
    script?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    sqlValue?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    sqlValueId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    staticValue?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  InputWhereUniqueInput: { // input type
    id?: string | null; // String
    sqlValueId?: string | null; // String
  }
  JoinInput: { // input type
    source: NexusGenInputs['ColumnInputWithoutJoins']; // ColumnInputWithoutJoins!
    target: NexusGenInputs['ColumnInputWithoutJoins']; // ColumnInputWithoutJoins!
  }
  JoinListRelationFilter: { // input type
    every?: NexusGenInputs['JoinWhereInput'] | null; // JoinWhereInput
    none?: NexusGenInputs['JoinWhereInput'] | null; // JoinWhereInput
    some?: NexusGenInputs['JoinWhereInput'] | null; // JoinWhereInput
  }
  JoinWhereInput: { // input type
    AND?: NexusGenInputs['JoinWhereInput'][] | null; // [JoinWhereInput!]
    column?: NexusGenInputs['ColumnWhereInput'] | null; // ColumnWhereInput
    columnId?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['JoinWhereInput'][] | null; // [JoinWhereInput!]
    OR?: NexusGenInputs['JoinWhereInput'][] | null; // [JoinWhereInput!]
    tables?: NexusGenInputs['ColumnListRelationFilter'] | null; // ColumnListRelationFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  JoinWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  NestedBoolFilter: { // input type
    equals?: boolean | null; // Boolean
    not?: NexusGenInputs['NestedBoolFilter'] | null; // NestedBoolFilter
  }
  NestedDateTimeFilter: { // input type
    equals?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    gte?: NexusGenScalars['DateTime'] | null; // DateTime
    in?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
    lte?: NexusGenScalars['DateTime'] | null; // DateTime
    not?: NexusGenInputs['NestedDateTimeFilter'] | null; // NestedDateTimeFilter
    notIn?: NexusGenScalars['DateTime'][] | null; // [DateTime!]
  }
  NestedEnumConditionActionNullableFilter: { // input type
    equals?: NexusGenEnums['ConditionAction'] | null; // ConditionAction
    in?: NexusGenEnums['ConditionAction'][] | null; // [ConditionAction!]
    not?: NexusGenInputs['NestedEnumConditionActionNullableFilter'] | null; // NestedEnumConditionActionNullableFilter
    notIn?: NexusGenEnums['ConditionAction'][] | null; // [ConditionAction!]
  }
  NestedEnumConditionRelationFilter: { // input type
    equals?: NexusGenEnums['ConditionRelation'] | null; // ConditionRelation
    in?: NexusGenEnums['ConditionRelation'][] | null; // [ConditionRelation!]
    not?: NexusGenInputs['NestedEnumConditionRelationFilter'] | null; // NestedEnumConditionRelationFilter
    notIn?: NexusGenEnums['ConditionRelation'][] | null; // [ConditionRelation!]
  }
  NestedEnumDatabaseTypeFilter: { // input type
    equals?: NexusGenEnums['DatabaseType'] | null; // DatabaseType
    in?: NexusGenEnums['DatabaseType'][] | null; // [DatabaseType!]
    not?: NexusGenInputs['NestedEnumDatabaseTypeFilter'] | null; // NestedEnumDatabaseTypeFilter
    notIn?: NexusGenEnums['DatabaseType'][] | null; // [DatabaseType!]
  }
  NestedEnumRoleFilter: { // input type
    equals?: NexusGenEnums['Role'] | null; // Role
    in?: NexusGenEnums['Role'][] | null; // [Role!]
    not?: NexusGenInputs['NestedEnumRoleFilter'] | null; // NestedEnumRoleFilter
    notIn?: NexusGenEnums['Role'][] | null; // [Role!]
  }
  NestedEnumSourceRoleFilter: { // input type
    equals?: NexusGenEnums['SourceRole'] | null; // SourceRole
    in?: NexusGenEnums['SourceRole'][] | null; // [SourceRole!]
    not?: NexusGenInputs['NestedEnumSourceRoleFilter'] | null; // NestedEnumSourceRoleFilter
    notIn?: NexusGenEnums['SourceRole'][] | null; // [SourceRole!]
  }
  NestedStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  NestedStringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  ResourceListRelationFilter: { // input type
    every?: NexusGenInputs['ResourceWhereInput'] | null; // ResourceWhereInput
    none?: NexusGenInputs['ResourceWhereInput'] | null; // ResourceWhereInput
    some?: NexusGenInputs['ResourceWhereInput'] | null; // ResourceWhereInput
  }
  ResourceWhereInput: { // input type
    AND?: NexusGenInputs['ResourceWhereInput'][] | null; // [ResourceWhereInput!]
    attributes?: NexusGenInputs['AttributeListRelationFilter'] | null; // AttributeListRelationFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    definitionId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    filters?: NexusGenInputs['FilterListRelationFilter'] | null; // FilterListRelationFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    label?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    logicalReference?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['ResourceWhereInput'][] | null; // [ResourceWhereInput!]
    OR?: NexusGenInputs['ResourceWhereInput'][] | null; // [ResourceWhereInput!]
    primaryKeyColumn?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    primaryKeyTable?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
    source?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
    sourceId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  ResourceWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  SourceListRelationFilter: { // input type
    every?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
    none?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
    some?: NexusGenInputs['SourceWhereInput'] | null; // SourceWhereInput
  }
  SourceWhereInput: { // input type
    accessControls?: NexusGenInputs['AccessControlListRelationFilter'] | null; // AccessControlListRelationFilter
    AND?: NexusGenInputs['SourceWhereInput'][] | null; // [SourceWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    credential?: NexusGenInputs['CredentialWhereInput'] | null; // CredentialWhereInput
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['SourceWhereInput'][] | null; // [SourceWhereInput!]
    OR?: NexusGenInputs['SourceWhereInput'][] | null; // [SourceWhereInput!]
    resources?: NexusGenInputs['ResourceListRelationFilter'] | null; // ResourceListRelationFilter
    template?: NexusGenInputs['TemplateWhereInput'] | null; // TemplateWhereInput
    templateId?: NexusGenInputs['StringFilter'] | null; // StringFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    version?: NexusGenInputs['StringNullableFilter'] | null; // StringNullableFilter
  }
  SourceWhereUniqueInput: { // input type
    id?: string | null; // String
    Source_templateId_name?: NexusGenInputs['Source_templateId_nameCompoundUniqueInput'] | null; // Source_templateId_nameCompoundUniqueInput
  }
  Source_templateId_nameCompoundUniqueInput: { // input type
    name: string; // String!
    templateId: string; // String!
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringFilter'] | null; // NestedStringFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StringNullableFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    mode?: NexusGenEnums['QueryMode'] | null; // QueryMode
    not?: NexusGenInputs['NestedStringNullableFilter'] | null; // NestedStringNullableFilter
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  StructureDefinitionWhereFilter: { // input type
    derivation?: string | null; // String
    kind?: string | null; // String
    type?: string | null; // String
  }
  TemplateWhereInput: { // input type
    AND?: NexusGenInputs['TemplateWhereInput'][] | null; // [TemplateWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['TemplateWhereInput'][] | null; // [TemplateWhereInput!]
    OR?: NexusGenInputs['TemplateWhereInput'][] | null; // [TemplateWhereInput!]
    sources?: NexusGenInputs['SourceListRelationFilter'] | null; // SourceListRelationFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  TemplateWhereUniqueInput: { // input type
    id?: string | null; // String
    name?: string | null; // String
  }
  UpdateInputInput: { // input type
    conceptMapId?: string | null; // String
    script?: string | null; // String
  }
  UpdateResourceInput: { // input type
    label?: string | null; // String
    primaryKeyColumn?: string | null; // String
    primaryKeyTable?: string | null; // String
  }
  UserWhereInput: { // input type
    AccessControl?: NexusGenInputs['AccessControlListRelationFilter'] | null; // AccessControlListRelationFilter
    AND?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    Comment?: NexusGenInputs['CommentListRelationFilter'] | null; // CommentListRelationFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    OR?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    role?: NexusGenInputs['EnumRoleFilter'] | null; // EnumRoleFilter
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
}

export interface NexusGenEnums {
  ConditionAction: "EXCLUDE" | "INCLUDE"
  ConditionRelation: "EQ" | "GE" | "GT" | "LE" | "LT" | "NOTNULL" | "NULL"
  DatabaseType: "MSSQL" | "ORACLE" | "POSTGRES"
  QueryMode: "default" | "insensitive"
  Role: "ADMIN" | "USER"
  SourceRole: "READER" | "WRITER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  JSON: any
}

export interface NexusGenObjects {
  AccessControl: { // root type
    id: string; // String!
    role: NexusGenEnums['SourceRole']; // SourceRole!
  }
  Attribute: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    definitionId: string; // String!
    id: string; // String!
    path: string; // String!
    sliceName?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AttributeDefinition: {};
  Column: { // root type
    column?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    table?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Comment: { // root type
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    validation: boolean; // Boolean!
  }
  ConceptMap: {};
  Condition: { // root type
    action?: NexusGenEnums['ConditionAction'] | null; // ConditionAction
    id: string; // String!
    relation: NexusGenEnums['ConditionRelation']; // ConditionRelation!
    value?: string | null; // String
  }
  Credential: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    database: string; // String!
    host: string; // String!
    id: string; // String!
    login: string; // String!
    model: NexusGenEnums['DatabaseType']; // DatabaseType!
    owner: string; // String!
    password: string; // String!
    port: string; // String!
    schema?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Filter: { // root type
    id: string; // String!
    relation: string; // String!
    value: string; // String!
  }
  Input: { // root type
    conceptMapId?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    script?: string | null; // String
    staticValue?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  InputGroup: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    mergingScript?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Join: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Query: {};
  Resource: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    definitionId: string; // String!
    id: string; // String!
    label?: string | null; // String
    logicalReference: string; // String!
    primaryKeyColumn?: string | null; // String
    primaryKeyTable?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Source: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    version?: string | null; // String
  }
  StructureDefinition: {};
  Template: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: string; // String!
    name: string; // String!
    role: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AccessControl: { // field return type
    id: string; // String!
    role: NexusGenEnums['SourceRole']; // SourceRole!
    source: NexusGenRootTypes['Source']; // Source!
    user: NexusGenRootTypes['User']; // User!
  }
  Attribute: { // field return type
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    definition: NexusGenRootTypes['StructureDefinition'] | null; // StructureDefinition
    definitionId: string; // String!
    id: string; // String!
    inputGroups: NexusGenRootTypes['InputGroup'][]; // [InputGroup!]!
    path: string; // String!
    resource: NexusGenRootTypes['Resource'] | null; // Resource
    sliceName: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AttributeDefinition: { // field return type
    attribute: NexusGenScalars['JSON'] | null; // JSON
    extensions: Array<NexusGenRootTypes['StructureDefinition'] | null> | null; // [StructureDefinition]
    id: string | null; // String
  }
  Column: { // field return type
    column: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    joins: NexusGenRootTypes['Join'][]; // [Join!]!
    table: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Comment: { // field return type
    attribute: NexusGenRootTypes['Attribute'] | null; // Attribute
    author: NexusGenRootTypes['User']; // User!
    content: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    validation: boolean; // Boolean!
  }
  ConceptMap: { // field return type
    id: string | null; // String
    name: string | null; // String
    title: string | null; // String
  }
  Condition: { // field return type
    action: NexusGenEnums['ConditionAction'] | null; // ConditionAction
    id: string; // String!
    relation: NexusGenEnums['ConditionRelation']; // ConditionRelation!
    sqlValue: NexusGenRootTypes['Column'] | null; // Column
    value: string | null; // String
  }
  Credential: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    database: string; // String!
    decryptedPassword: string | null; // String
    host: string; // String!
    id: string; // String!
    login: string; // String!
    model: NexusGenEnums['DatabaseType']; // DatabaseType!
    owner: string; // String!
    password: string; // String!
    port: string; // String!
    schema: string | null; // String
    source: NexusGenRootTypes['Source']; // Source!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Filter: { // field return type
    id: string; // String!
    relation: string; // String!
    sqlColumn: NexusGenRootTypes['Column']; // Column!
    value: string; // String!
  }
  Input: { // field return type
    conceptMapId: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    inputGroup: NexusGenRootTypes['InputGroup'] | null; // InputGroup
    script: string | null; // String
    sqlValue: NexusGenRootTypes['Column'] | null; // Column
    staticValue: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  InputGroup: { // field return type
    attribute: NexusGenRootTypes['Attribute'] | null; // Attribute
    conditions: NexusGenRootTypes['Condition'][]; // [Condition!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    inputs: NexusGenRootTypes['Input'][]; // [Input!]!
    mergingScript: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Join: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    tables: NexusGenRootTypes['Column'][]; // [Column!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    addConditionToInputGroup: NexusGenRootTypes['InputGroup'] | null; // InputGroup
    addJoinToColumn: NexusGenRootTypes['Column'] | null; // Column
    createAccessControl: NexusGenRootTypes['AccessControl'] | null; // AccessControl
    createAttribute: NexusGenRootTypes['Attribute'] | null; // Attribute
    createComment: NexusGenRootTypes['Comment'] | null; // Comment
    createInput: NexusGenRootTypes['Input'] | null; // Input
    createInputGroup: NexusGenRootTypes['InputGroup'] | null; // InputGroup
    createResource: NexusGenRootTypes['Resource'] | null; // Resource
    createSource: NexusGenRootTypes['Source'] | null; // Source
    createTemplate: NexusGenRootTypes['Template'] | null; // Template
    deleteAccessControl: NexusGenRootTypes['AccessControl'] | null; // AccessControl
    deleteAttribute: NexusGenRootTypes['Attribute'] | null; // Attribute
    deleteAttributes: Array<NexusGenRootTypes['Attribute'] | null> | null; // [Attribute]
    deleteCondition: NexusGenRootTypes['Condition'] | null; // Condition
    deleteCredential: NexusGenRootTypes['Credential'] | null; // Credential
    deleteInput: NexusGenRootTypes['Input'] | null; // Input
    deleteJoin: NexusGenRootTypes['Join'] | null; // Join
    deleteResource: NexusGenRootTypes['Resource'] | null; // Resource
    deleteSource: NexusGenRootTypes['Source'] | null; // Source
    deleteTemplate: NexusGenRootTypes['Template'] | null; // Template
    logout: NexusGenRootTypes['User'] | null; // User
    updateCondition: NexusGenRootTypes['Condition'] | null; // Condition
    updateInput: NexusGenRootTypes['Input'] | null; // Input
    updateInputGroup: NexusGenRootTypes['InputGroup'] | null; // InputGroup
    updateJoin: NexusGenRootTypes['Join'] | null; // Join
    updateResource: NexusGenRootTypes['Resource'] | null; // Resource
    updateRole: NexusGenRootTypes['User'] | null; // User
    upsertCredential: NexusGenRootTypes['Credential'] | null; // Credential
  }
  Query: { // field return type
    attribute: NexusGenRootTypes['Attribute'] | null; // Attribute
    attributes: NexusGenRootTypes['Attribute'][]; // [Attribute!]!
    credential: NexusGenRootTypes['Credential'] | null; // Credential
    me: NexusGenRootTypes['User'] | null; // User
    resource: NexusGenRootTypes['Resource'] | null; // Resource
    source: NexusGenRootTypes['Source'] | null; // Source
    sources: Array<NexusGenRootTypes['Source'] | null> | null; // [Source]
    structureDefinition: NexusGenRootTypes['StructureDefinition'] | null; // StructureDefinition
    template: NexusGenRootTypes['Template'] | null; // Template
    templates: NexusGenRootTypes['Template'][]; // [Template!]!
  }
  Resource: { // field return type
    attributes: NexusGenRootTypes['Attribute'][]; // [Attribute!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    definition: NexusGenRootTypes['StructureDefinition'] | null; // StructureDefinition
    definitionId: string; // String!
    filters: NexusGenRootTypes['Filter'][]; // [Filter!]!
    id: string; // String!
    label: string | null; // String
    logicalReference: string; // String!
    primaryKeyColumn: string | null; // String
    primaryKeyTable: string | null; // String
    source: NexusGenRootTypes['Source']; // Source!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Source: { // field return type
    accessControls: NexusGenRootTypes['AccessControl'][]; // [AccessControl!]!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    credential: NexusGenRootTypes['Credential'] | null; // Credential
    id: string; // String!
    mapping: string | null; // String
    mappingProgress: Array<number | null> | null; // [Int]
    name: string; // String!
    resources: NexusGenRootTypes['Resource'][]; // [Resource!]!
    template: NexusGenRootTypes['Template']; // Template!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    usedConceptMapIds: Array<string | null> | null; // [String]
    usedProfileIds: Array<string | null> | null; // [String]
    version: string | null; // String
  }
  StructureDefinition: { // field return type
    attributes: Array<NexusGenRootTypes['AttributeDefinition'] | null> | null; // [AttributeDefinition]
    derivation: string | null; // String
    id: string | null; // String
    kind: string | null; // String
    name: string | null; // String
    publisher: string | null; // String
    type: string | null; // String
    url: string | null; // String
  }
  Template: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // String!
    name: string; // String!
    sources: NexusGenRootTypes['Source'][]; // [Source!]!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: string; // String!
    name: string; // String!
    role: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
}

export interface NexusGenFieldTypeNames {
  AccessControl: { // field return type name
    id: 'String'
    role: 'SourceRole'
    source: 'Source'
    user: 'User'
  }
  Attribute: { // field return type name
    comments: 'Comment'
    createdAt: 'DateTime'
    definition: 'StructureDefinition'
    definitionId: 'String'
    id: 'String'
    inputGroups: 'InputGroup'
    path: 'String'
    resource: 'Resource'
    sliceName: 'String'
    updatedAt: 'DateTime'
  }
  AttributeDefinition: { // field return type name
    attribute: 'JSON'
    extensions: 'StructureDefinition'
    id: 'String'
  }
  Column: { // field return type name
    column: 'String'
    createdAt: 'DateTime'
    id: 'String'
    joins: 'Join'
    table: 'String'
    updatedAt: 'DateTime'
  }
  Comment: { // field return type name
    attribute: 'Attribute'
    author: 'User'
    content: 'String'
    createdAt: 'DateTime'
    id: 'String'
    validation: 'Boolean'
  }
  ConceptMap: { // field return type name
    id: 'String'
    name: 'String'
    title: 'String'
  }
  Condition: { // field return type name
    action: 'ConditionAction'
    id: 'String'
    relation: 'ConditionRelation'
    sqlValue: 'Column'
    value: 'String'
  }
  Credential: { // field return type name
    createdAt: 'DateTime'
    database: 'String'
    decryptedPassword: 'String'
    host: 'String'
    id: 'String'
    login: 'String'
    model: 'DatabaseType'
    owner: 'String'
    password: 'String'
    port: 'String'
    schema: 'String'
    source: 'Source'
    updatedAt: 'DateTime'
  }
  Filter: { // field return type name
    id: 'String'
    relation: 'String'
    sqlColumn: 'Column'
    value: 'String'
  }
  Input: { // field return type name
    conceptMapId: 'String'
    createdAt: 'DateTime'
    id: 'String'
    inputGroup: 'InputGroup'
    script: 'String'
    sqlValue: 'Column'
    staticValue: 'String'
    updatedAt: 'DateTime'
  }
  InputGroup: { // field return type name
    attribute: 'Attribute'
    conditions: 'Condition'
    createdAt: 'DateTime'
    id: 'String'
    inputs: 'Input'
    mergingScript: 'String'
    updatedAt: 'DateTime'
  }
  Join: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    tables: 'Column'
    updatedAt: 'DateTime'
  }
  Mutation: { // field return type name
    addConditionToInputGroup: 'InputGroup'
    addJoinToColumn: 'Column'
    createAccessControl: 'AccessControl'
    createAttribute: 'Attribute'
    createComment: 'Comment'
    createInput: 'Input'
    createInputGroup: 'InputGroup'
    createResource: 'Resource'
    createSource: 'Source'
    createTemplate: 'Template'
    deleteAccessControl: 'AccessControl'
    deleteAttribute: 'Attribute'
    deleteAttributes: 'Attribute'
    deleteCondition: 'Condition'
    deleteCredential: 'Credential'
    deleteInput: 'Input'
    deleteJoin: 'Join'
    deleteResource: 'Resource'
    deleteSource: 'Source'
    deleteTemplate: 'Template'
    logout: 'User'
    updateCondition: 'Condition'
    updateInput: 'Input'
    updateInputGroup: 'InputGroup'
    updateJoin: 'Join'
    updateResource: 'Resource'
    updateRole: 'User'
    upsertCredential: 'Credential'
  }
  Query: { // field return type name
    attribute: 'Attribute'
    attributes: 'Attribute'
    credential: 'Credential'
    me: 'User'
    resource: 'Resource'
    source: 'Source'
    sources: 'Source'
    structureDefinition: 'StructureDefinition'
    template: 'Template'
    templates: 'Template'
  }
  Resource: { // field return type name
    attributes: 'Attribute'
    createdAt: 'DateTime'
    definition: 'StructureDefinition'
    definitionId: 'String'
    filters: 'Filter'
    id: 'String'
    label: 'String'
    logicalReference: 'String'
    primaryKeyColumn: 'String'
    primaryKeyTable: 'String'
    source: 'Source'
    updatedAt: 'DateTime'
  }
  Source: { // field return type name
    accessControls: 'AccessControl'
    createdAt: 'DateTime'
    credential: 'Credential'
    id: 'String'
    mapping: 'String'
    mappingProgress: 'Int'
    name: 'String'
    resources: 'Resource'
    template: 'Template'
    updatedAt: 'DateTime'
    usedConceptMapIds: 'String'
    usedProfileIds: 'String'
    version: 'String'
  }
  StructureDefinition: { // field return type name
    attributes: 'AttributeDefinition'
    derivation: 'String'
    id: 'String'
    kind: 'String'
    name: 'String'
    publisher: 'String'
    type: 'String'
    url: 'String'
  }
  Template: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    name: 'String'
    sources: 'Source'
    updatedAt: 'DateTime'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    id: 'String'
    name: 'String'
    role: 'Role'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Attribute: {
    comments: { // args
      after?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      before?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    inputGroups: { // args
      after?: NexusGenInputs['InputGroupWhereUniqueInput'] | null; // InputGroupWhereUniqueInput
      before?: NexusGenInputs['InputGroupWhereUniqueInput'] | null; // InputGroupWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Column: {
    joins: { // args
      after?: NexusGenInputs['JoinWhereUniqueInput'] | null; // JoinWhereUniqueInput
      before?: NexusGenInputs['JoinWhereUniqueInput'] | null; // JoinWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  InputGroup: {
    conditions: { // args
      after?: NexusGenInputs['ConditionWhereUniqueInput'] | null; // ConditionWhereUniqueInput
      before?: NexusGenInputs['ConditionWhereUniqueInput'] | null; // ConditionWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    inputs: { // args
      after?: NexusGenInputs['InputWhereUniqueInput'] | null; // InputWhereUniqueInput
      before?: NexusGenInputs['InputWhereUniqueInput'] | null; // InputWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Join: {
    tables: { // args
      after?: NexusGenInputs['ColumnWhereUniqueInput'] | null; // ColumnWhereUniqueInput
      before?: NexusGenInputs['ColumnWhereUniqueInput'] | null; // ColumnWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    addConditionToInputGroup: { // args
      action?: string | null; // String
      column?: string | null; // String
      inputGroupId: string; // ID!
      relation?: NexusGenEnums['ConditionRelation'] | null; // ConditionRelation
      table?: string | null; // String
      value?: string | null; // String
    }
    addJoinToColumn: { // args
      columnId: string; // ID!
      join?: NexusGenInputs['JoinInput'] | null; // JoinInput
    }
    createAccessControl: { // args
      role: NexusGenEnums['SourceRole']; // SourceRole!
      sourceId: string; // ID!
      userEmail: string; // String!
    }
    createAttribute: { // args
      data?: NexusGenInputs['AttributeInput'] | null; // AttributeInput
      definitionId: string; // ID!
      path: string; // String!
      resourceId: string; // ID!
      sliceName?: string | null; // String
    }
    createComment: { // args
      attributeId: string; // ID!
      content: string; // String!
      validation: boolean; // Boolean!
    }
    createInput: { // args
      inputGroupId: string; // ID!
      script?: string | null; // String
      sql?: NexusGenInputs['ColumnInput'] | null; // ColumnInput
      static?: string | null; // String
    }
    createInputGroup: { // args
      attributeId: string; // ID!
    }
    createResource: { // args
      definitionId: string; // String!
      sourceId: string; // ID!
    }
    createSource: { // args
      mapping?: string | null; // String
      name: string; // String!
      templateName: string; // String!
    }
    createTemplate: { // args
      name: string; // String!
    }
    deleteAccessControl: { // args
      accessControlId: string; // ID!
    }
    deleteAttribute: { // args
      attributeId: string; // ID!
    }
    deleteAttributes: { // args
      filter: NexusGenInputs['AttributeWhereInput']; // AttributeWhereInput!
    }
    deleteCondition: { // args
      conditionId: string; // ID!
    }
    deleteCredential: { // args
      credentialId: string; // ID!
    }
    deleteInput: { // args
      inputId: string; // ID!
    }
    deleteJoin: { // args
      joinId: string; // ID!
    }
    deleteResource: { // args
      resourceId: string; // ID!
    }
    deleteSource: { // args
      sourceId: string; // ID!
    }
    deleteTemplate: { // args
      id: string; // ID!
    }
    updateCondition: { // args
      action?: string | null; // String
      column?: string | null; // String
      conditionId: string; // ID!
      relation?: NexusGenEnums['ConditionRelation'] | null; // ConditionRelation
      table?: string | null; // String
      value?: string | null; // String
    }
    updateInput: { // args
      data: NexusGenInputs['UpdateInputInput']; // UpdateInputInput!
      inputId: string; // ID!
    }
    updateInputGroup: { // args
      inputGroupId: string; // ID!
      mergingScript?: string | null; // String
    }
    updateJoin: { // args
      data: NexusGenInputs['JoinInput']; // JoinInput!
      joinId: string; // ID!
    }
    updateResource: { // args
      data: NexusGenInputs['UpdateResourceInput']; // UpdateResourceInput!
      filters?: NexusGenInputs['FilterInput'][] | null; // [FilterInput!]
      resourceId: string; // ID!
    }
    updateRole: { // args
      newRole: NexusGenEnums['Role']; // Role!
      userId: string; // ID!
    }
    upsertCredential: { // args
      database: string; // String!
      host: string; // String!
      login: string; // String!
      model: string; // String!
      owner: string; // String!
      password: string; // String!
      port: string; // String!
      sourceId: string; // ID!
    }
  }
  Query: {
    attribute: { // args
      where: NexusGenInputs['AttributeWhereUniqueInput']; // AttributeWhereUniqueInput!
    }
    attributes: { // args
      after?: NexusGenInputs['AttributeWhereUniqueInput'] | null; // AttributeWhereUniqueInput
      before?: NexusGenInputs['AttributeWhereUniqueInput'] | null; // AttributeWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      where?: NexusGenInputs['AttributeWhereInput'] | null; // AttributeWhereInput
    }
    credential: { // args
      where: NexusGenInputs['CredentialWhereUniqueInput']; // CredentialWhereUniqueInput!
    }
    resource: { // args
      where: NexusGenInputs['ResourceWhereUniqueInput']; // ResourceWhereUniqueInput!
    }
    source: { // args
      where: NexusGenInputs['SourceWhereUniqueInput']; // SourceWhereUniqueInput!
    }
    structureDefinition: { // args
      definitionId: string; // ID!
    }
    template: { // args
      where: NexusGenInputs['TemplateWhereUniqueInput']; // TemplateWhereUniqueInput!
    }
    templates: { // args
      after?: NexusGenInputs['TemplateWhereUniqueInput'] | null; // TemplateWhereUniqueInput
      before?: NexusGenInputs['TemplateWhereUniqueInput'] | null; // TemplateWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Resource: {
    attributes: { // args
      after?: NexusGenInputs['AttributeWhereUniqueInput'] | null; // AttributeWhereUniqueInput
      before?: NexusGenInputs['AttributeWhereUniqueInput'] | null; // AttributeWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Source: {
    accessControls: { // args
      after?: NexusGenInputs['AccessControlWhereUniqueInput'] | null; // AccessControlWhereUniqueInput
      before?: NexusGenInputs['AccessControlWhereUniqueInput'] | null; // AccessControlWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    mapping: { // args
      includeComments: boolean; // Boolean!
    }
    resources: { // args
      after?: NexusGenInputs['ResourceWhereUniqueInput'] | null; // ResourceWhereUniqueInput
      before?: NexusGenInputs['ResourceWhereUniqueInput'] | null; // ResourceWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Template: {
    sources: { // args
      after?: NexusGenInputs['SourceWhereUniqueInput'] | null; // SourceWhereUniqueInput
      before?: NexusGenInputs['SourceWhereUniqueInput'] | null; // SourceWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}