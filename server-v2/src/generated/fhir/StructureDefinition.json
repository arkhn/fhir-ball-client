{
  "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
  "properties": {
    "resourceType": {
      "description": "This is a StructureDefinition resource",
      "enum": ["StructureDefinition"]
    },
    "id": {
      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "versionId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string",
          "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
        },
        "_versionId": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "lastUpdated": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string",
          "description": "An instant in time - known at least to the second"
        },
        "_lastUpdated": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "source": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_source": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "implicitRules": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_implicitRules": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "language": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_language": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "text": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": ["generated", "extensions", "additional", "empty"]
        },
        "_status": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "div": {
          "description": "xhtml - escaped html (see specfication)"
        }
      },
      "additionalProperties": false,
      "required": ["div"]
    },
    "contained": {
      "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "items": {},
      "type": "array"
    },
    "extension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "modifierExtension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "url": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_url": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "identifier": {
      "description": "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
      "items": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": ["usual", "official", "temp", "secondary", "old"]
          },
          "_use": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "system": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "String of characters used to identify a name or a resource"
          },
          "_system": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "value": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_value": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "period": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "assigner": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "version": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_version": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "name": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_name": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "title": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_title": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The status of this structure definition. Enables tracking the life-cycle of the content.",
      "enum": ["draft", "active", "retired", "unknown"]
    },
    "_status": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "experimental": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "_experimental": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "date": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "_date": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "publisher": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_publisher": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "contact": {
      "description": "Contact details to assist a user in finding and communicating with the publisher.",
      "items": {
        "description": "Specifies contact information for a person or organization.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "name": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_name": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "telecom": {
            "description": "The contact details for the individual (if a name was provided) or the organization.",
            "items": {
              "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "system": {
                  "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                  "enum": [
                    "phone",
                    "fax",
                    "email",
                    "pager",
                    "url",
                    "sms",
                    "other"
                  ]
                },
                "_system": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "value": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_value": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "use": {
                  "description": "Identifies the purpose for the contact point.",
                  "enum": ["home", "work", "temp", "old", "mobile"]
                },
                "_use": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "rank": {
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number",
                  "description": "An integer with a value that is positive (e.g. >0)"
                },
                "_rank": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "period": {
                  "description": "A time period defined by a start and end date and optionally time.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "start": {
                      "description": "The start of the period. The boundary is inclusive."
                    },
                    "_start": {
                      "description": "Extensions for start"
                    },
                    "end": {
                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                    },
                    "_end": {
                      "description": "Extensions for end"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "description": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_description": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "useContext": {
      "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances.",
      "items": {
        "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "code": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueQuantity": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comparator": {
                "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                "enum": ["<", "<=", ">=", ">"]
              },
              "_comparator": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "unit": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_unit": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueRange": {
            "description": "A set of ordered Quantities defined by a low and high limit.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "low": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "high": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["code"]
      },
      "type": "array"
    },
    "jurisdiction": {
      "description": "A legal or geographic region in which the structure definition is intended to be used.",
      "items": {
        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "coding": {
            "description": "A reference to a code defined by a terminology system.",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "system": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "String of characters used to identify a name or a resource"
                },
                "_system": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "version": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_version": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "code": {
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string",
                  "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                },
                "_code": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "display": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_display": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "userSelected": {
                  "pattern": "^true|false$",
                  "type": "boolean",
                  "description": "Value of \"true\" or \"false\""
                },
                "_userSelected": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "text": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_text": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "purpose": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_purpose": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "copyright": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_copyright": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "keyword": {
      "description": "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes.",
      "items": {
        "description": "A reference to a code defined by a terminology system.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "system": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "String of characters used to identify a name or a resource"
          },
          "_system": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "version": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_version": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "code": {
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string",
            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
          },
          "_code": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "display": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_display": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "userSelected": {
            "pattern": "^true|false$",
            "type": "boolean",
            "description": "Value of \"true\" or \"false\""
          },
          "_userSelected": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "fhirVersion": {
      "description": "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.1. for this version.",
      "enum": [
        "0.01",
        "0.05",
        "0.06",
        "0.11",
        "0.0.80",
        "0.0.81",
        "0.0.82",
        "0.4.0",
        "0.5.0",
        "1.0.0",
        "1.0.1",
        "1.0.2",
        "1.1.0",
        "1.4.0",
        "1.6.0",
        "1.8.0",
        "3.0.0",
        "3.0.1",
        "3.3.0",
        "3.5.0",
        "4.0.0",
        "4.0.1"
      ]
    },
    "_fhirVersion": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "mapping": {
      "description": "An external specification that the content is mapped to.",
      "items": {
        "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "identity": {
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string",
            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
          },
          "_identity": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "uri": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "String of characters used to identify a name or a resource"
          },
          "_uri": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "name": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_name": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "comment": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_comment": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "kind": {
      "description": "Defines the kind of structure that this definition is describing.",
      "enum": ["primitive-type", "complex-type", "resource", "logical"]
    },
    "_kind": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "abstract": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "_abstract": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "context": {
      "description": "Identifies the types of resource or data type elements to which the extension can be applied.",
      "items": {
        "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "type": {
            "description": "Defines how to interpret the expression that defines what the context of the extension is.",
            "enum": ["fhirpath", "element", "extension"]
          },
          "_type": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "expression": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_expression": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "contextInvariant": {
      "description": "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true.",
      "items": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A sequence of Unicode characters"
      },
      "type": "array"
    },
    "_contextInvariant": {
      "description": "Extensions for contextInvariant",
      "items": {
        "description": "Base definition for all elements in a resource.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "type": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_type": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "baseDefinition": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
    },
    "_baseDefinition": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "derivation": {
      "description": "How the type relates to the baseDefinition.",
      "enum": ["specialization", "constraint"]
    },
    "_derivation": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "snapshot": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "element": {
          "description": "Captures constraints on each element within the resource.",
          "items": {
            "description": "Captures constraints on each element within the resource, profile, or extension.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "path": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_path": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "representation": {
                "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
                "items": {
                  "enum": ["xmlAttr", "xmlText", "typeAttr", "cdaText", "xhtml"]
                },
                "type": "array"
              },
              "_representation": {
                "description": "Extensions for representation",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "sliceName": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_sliceName": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "sliceIsConstraining": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_sliceIsConstraining": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "label": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_label": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "description": "A code that has the same meaning as the element in a particular terminology.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "slicing": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "discriminator": {
                    "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "ordered": {
                    "description": "If the matching elements have to occur in the same order as defined in the profile."
                  },
                  "_ordered": {
                    "description": "Extensions for ordered"
                  },
                  "rules": {
                    "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
                    "enum": ["closed", "open", "openAtEnd"]
                  },
                  "_rules": {
                    "description": "Extensions for rules"
                  }
                },
                "additionalProperties": false
              },
              "short": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_short": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "definition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_definition": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "requirements": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_requirements": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "alias": {
                "description": "Identifies additional names by which this element might also be known.",
                "items": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "min": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_min": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "max": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_max": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "base": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "path": {
                    "description": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base."
                  },
                  "_path": {
                    "description": "Extensions for path"
                  },
                  "min": {
                    "description": "Minimum cardinality of the base element identified by the path."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "Maximum cardinality of the base element identified by the path."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  }
                },
                "additionalProperties": false
              },
              "contentReference": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_contentReference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "The data type or resource that the value of this element is permitted to be.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "code": {
                      "description": "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "profile": {
                      "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.",
                      "items": {},
                      "type": "array"
                    },
                    "_profile": {
                      "description": "Extensions for profile"
                    },
                    "targetProfile": {
                      "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
                      "items": {},
                      "type": "array"
                    },
                    "aggregation": {
                      "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
                      "items": {
                        "enum": ["contained", "referenced", "bundled"]
                      },
                      "type": "array"
                    },
                    "_aggregation": {
                      "description": "Extensions for aggregation",
                      "items": {},
                      "type": "array"
                    },
                    "versioning": {
                      "description": "Whether this reference needs to be version specific or version independent, or whether either can be used.",
                      "enum": ["either", "independent", "specific"]
                    },
                    "_versioning": {
                      "description": "Extensions for versioning"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "defaultValueBase64Binary": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_defaultValueBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueBoolean": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_defaultValueBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCanonical": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCode": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_defaultValueCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDate": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_defaultValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDateTime": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_defaultValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDecimal": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_defaultValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueId": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_defaultValueId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueInstant": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_defaultValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueInteger": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_defaultValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMarkdown": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_defaultValueMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueOid": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_defaultValueOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValuePositiveInt": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_defaultValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueString": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_defaultValueString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueTime": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_defaultValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUnsignedInt": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_defaultValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUri": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUrl": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUuid": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_defaultValueUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "defaultValuePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "defaultValueSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "defaultValueTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "defaultValueDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "meaningWhenMissing": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_meaningWhenMissing": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "orderMeaning": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_orderMeaning": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedBase64Binary": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_fixedBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedBoolean": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_fixedBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedCanonical": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedCode": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_fixedCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDate": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_fixedDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDateTime": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_fixedDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDecimal": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_fixedDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedId": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_fixedId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedInstant": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_fixedInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedInteger": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_fixedInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedMarkdown": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_fixedMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedOid": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_fixedOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedPositiveInt": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_fixedPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedString": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_fixedString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedTime": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_fixedTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUnsignedInt": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_fixedUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUri": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUrl": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUuid": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_fixedUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "fixedAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "fixedAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "fixedCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "fixedCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "fixedContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "fixedCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "fixedIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "fixedMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "fixedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "fixedQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "fixedRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "fixedReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "fixedSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "fixedSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "fixedTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "fixedContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "fixedParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "fixedRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "fixedTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "fixedUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "fixedDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "fixedMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternBase64Binary": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_patternBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternBoolean": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_patternBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternCanonical": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternCode": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_patternCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDate": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_patternDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDateTime": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_patternDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDecimal": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_patternDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternId": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_patternId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternInstant": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_patternInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternInteger": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_patternInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternMarkdown": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_patternMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternOid": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_patternOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternPositiveInt": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_patternPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternString": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_patternString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternTime": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_patternTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUnsignedInt": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_patternUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUri": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUrl": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUuid": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_patternUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "patternAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "patternAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "patternCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "patternCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "patternContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "patternCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "patternIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "patternMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "patternPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "patternQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "patternRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "patternReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "patternSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "patternSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "patternTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "patternContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "patternParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "patternRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "patternTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "patternUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "patternDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "patternMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "description": "A sample value for this element demonstrating the type of information that would typically be found in the element.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "label": {
                      "description": "Describes the purpose of this example amoung the set of examples."
                    },
                    "_label": {
                      "description": "Extensions for label"
                    },
                    "valueBase64Binary": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAge": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAnnotation": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAttachment": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCodeableConcept": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCoding": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContactPoint": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCount": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDistance": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDuration": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueHumanName": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueIdentifier": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueMoney": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valuePeriod": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueQuantity": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRange": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRatio": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueReference": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueSampledData": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueSignature": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueTiming": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContactDetail": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContributor": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDataRequirement": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueExpression": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueParameterDefinition": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRelatedArtifact": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueTriggerDefinition": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueUsageContext": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDosage": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueMeta": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "minValueDate": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_minValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueDateTime": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_minValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueInstant": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_minValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueTime": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_minValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueDecimal": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_minValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueInteger": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_minValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValuePositiveInt": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_minValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueUnsignedInt": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_minValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDate": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_maxValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDateTime": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_maxValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueInstant": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_maxValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueTime": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_maxValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDecimal": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_maxValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueInteger": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_maxValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValuePositiveInt": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_maxValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueUnsignedInt": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_maxValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "maxLength": {
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number",
                "description": "A whole number"
              },
              "_maxLength": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "condition": {
                "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
                "items": {
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string",
                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                },
                "type": "array"
              },
              "_condition": {
                "description": "Extensions for condition",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "constraint": {
                "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "key": {
                      "description": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality."
                    },
                    "_key": {
                      "description": "Extensions for key"
                    },
                    "requirements": {
                      "description": "Description of why this constraint is necessary or appropriate."
                    },
                    "_requirements": {
                      "description": "Extensions for requirements"
                    },
                    "severity": {
                      "description": "Identifies the impact constraint violation has on the conformance of the instance.",
                      "enum": ["error", "warning"]
                    },
                    "_severity": {
                      "description": "Extensions for severity"
                    },
                    "human": {
                      "description": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated."
                    },
                    "_human": {
                      "description": "Extensions for human"
                    },
                    "expression": {
                      "description": "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met."
                    },
                    "_expression": {
                      "description": "Extensions for expression"
                    },
                    "xpath": {
                      "description": "An XPath expression of constraint that can be executed to see if this constraint is met."
                    },
                    "_xpath": {
                      "description": "Extensions for xpath"
                    },
                    "source": {
                      "description": "A reference to the original source of the constraint, for traceability purposes."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "mustSupport": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_mustSupport": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isModifier": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_isModifier": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isModifierReason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_isModifierReason": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isSummary": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_isSummary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "binding": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "strength": {
                    "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
                    "enum": ["required", "extensible", "preferred", "example"]
                  },
                  "_strength": {
                    "description": "Extensions for strength"
                  },
                  "description": {
                    "description": "Describes the intended use of this particular set of codes."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "valueSet": {
                    "description": "Refers to the value set that identifies the set of codes the binding refers to."
                  }
                },
                "additionalProperties": false
              },
              "mapping": {
                "description": "Identifies a concept from an external specification that roughly corresponds to this element.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "identity": {
                      "description": "An internal reference to the definition of a mapping."
                    },
                    "_identity": {
                      "description": "Extensions for identity"
                    },
                    "language": {
                      "description": "Identifies the computable language in which mapping.map is expressed."
                    },
                    "_language": {
                      "description": "Extensions for language"
                    },
                    "map": {
                      "description": "Expresses what part of the target specification corresponds to this element."
                    },
                    "_map": {
                      "description": "Extensions for map"
                    },
                    "comment": {
                      "description": "Comments that provide information about the mapping or its use."
                    },
                    "_comment": {
                      "description": "Extensions for comment"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": ["element"]
    },
    "differential": {
      "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "element": {
          "description": "Captures constraints on each element within the resource.",
          "items": {
            "description": "Captures constraints on each element within the resource, profile, or extension.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "path": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_path": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "representation": {
                "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
                "items": {
                  "enum": ["xmlAttr", "xmlText", "typeAttr", "cdaText", "xhtml"]
                },
                "type": "array"
              },
              "_representation": {
                "description": "Extensions for representation",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "sliceName": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_sliceName": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "sliceIsConstraining": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_sliceIsConstraining": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "label": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_label": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "description": "A code that has the same meaning as the element in a particular terminology.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "slicing": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "discriminator": {
                    "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "ordered": {
                    "description": "If the matching elements have to occur in the same order as defined in the profile."
                  },
                  "_ordered": {
                    "description": "Extensions for ordered"
                  },
                  "rules": {
                    "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
                    "enum": ["closed", "open", "openAtEnd"]
                  },
                  "_rules": {
                    "description": "Extensions for rules"
                  }
                },
                "additionalProperties": false
              },
              "short": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_short": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "definition": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_definition": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comment": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_comment": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "requirements": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_requirements": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "alias": {
                "description": "Identifies additional names by which this element might also be known.",
                "items": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "type": "array"
              },
              "_alias": {
                "description": "Extensions for alias",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "min": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_min": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "max": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_max": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "base": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "path": {
                    "description": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base."
                  },
                  "_path": {
                    "description": "Extensions for path"
                  },
                  "min": {
                    "description": "Minimum cardinality of the base element identified by the path."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "Maximum cardinality of the base element identified by the path."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  }
                },
                "additionalProperties": false
              },
              "contentReference": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_contentReference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "The data type or resource that the value of this element is permitted to be.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "code": {
                      "description": "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "profile": {
                      "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.",
                      "items": {},
                      "type": "array"
                    },
                    "_profile": {
                      "description": "Extensions for profile"
                    },
                    "targetProfile": {
                      "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
                      "items": {},
                      "type": "array"
                    },
                    "aggregation": {
                      "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
                      "items": {
                        "enum": ["contained", "referenced", "bundled"]
                      },
                      "type": "array"
                    },
                    "_aggregation": {
                      "description": "Extensions for aggregation",
                      "items": {},
                      "type": "array"
                    },
                    "versioning": {
                      "description": "Whether this reference needs to be version specific or version independent, or whether either can be used.",
                      "enum": ["either", "independent", "specific"]
                    },
                    "_versioning": {
                      "description": "Extensions for versioning"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "defaultValueBase64Binary": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_defaultValueBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueBoolean": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_defaultValueBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCanonical": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCode": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_defaultValueCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDate": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_defaultValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDateTime": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_defaultValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDecimal": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_defaultValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueId": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_defaultValueId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueInstant": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_defaultValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueInteger": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_defaultValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMarkdown": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_defaultValueMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueOid": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_defaultValueOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValuePositiveInt": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_defaultValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueString": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_defaultValueString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueTime": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_defaultValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUnsignedInt": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_defaultValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUri": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUrl": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_defaultValueUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUuid": {
                "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_defaultValueUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "defaultValuePeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "defaultValueSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "defaultValueTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "defaultValueParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "defaultValueDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "defaultValueMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "meaningWhenMissing": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
              },
              "_meaningWhenMissing": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "orderMeaning": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_orderMeaning": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedBase64Binary": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_fixedBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedBoolean": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_fixedBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedCanonical": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedCode": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_fixedCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDate": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_fixedDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDateTime": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_fixedDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDecimal": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_fixedDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedId": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_fixedId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedInstant": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_fixedInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedInteger": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_fixedInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedMarkdown": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_fixedMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedOid": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_fixedOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedPositiveInt": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_fixedPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedString": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_fixedString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedTime": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_fixedTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUnsignedInt": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_fixedUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUri": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUrl": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_fixedUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedUuid": {
                "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_fixedUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "fixedAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "fixedAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "fixedCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "fixedCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "fixedContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "fixedCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "fixedIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "fixedMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "fixedPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "fixedQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "fixedRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "fixedRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "fixedReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "fixedSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "fixedSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "fixedTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "fixedContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "fixedExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "fixedParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "fixedRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "fixedTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "fixedUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "fixedDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "fixedMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternBase64Binary": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_patternBase64Binary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternBoolean": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_patternBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternCanonical": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternCanonical": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternCode": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_patternCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDate": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_patternDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDateTime": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_patternDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDecimal": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_patternDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternId": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_patternId": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternInstant": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_patternInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternInteger": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_patternInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternMarkdown": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_patternMarkdown": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternOid": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_patternOid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternPositiveInt": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_patternPositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternString": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_patternString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternTime": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_patternTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUnsignedInt": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_patternUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUri": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUrl": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_patternUrl": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternUuid": {
                "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_patternUuid": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternAddress": {
                "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this address.",
                    "enum": ["home", "work", "temp", "old", "billing"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                    "enum": ["postal", "physical", "both"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                    "items": {},
                    "type": "array"
                  },
                  "_line": {
                    "description": "Extensions for line",
                    "items": {},
                    "type": "array"
                  },
                  "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center."
                  },
                  "_city": {
                    "description": "Extensions for city"
                  },
                  "district": {
                    "description": "The name of the administrative area (county)."
                  },
                  "_district": {
                    "description": "Extensions for district"
                  },
                  "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
                  },
                  "_state": {
                    "description": "Extensions for state"
                  },
                  "postalCode": {
                    "description": "A postal code designating a region defined by the postal service."
                  },
                  "_postalCode": {
                    "description": "Extensions for postalCode"
                  },
                  "country": {
                    "description": "Country - a nation as commonly understood or generally accepted."
                  },
                  "_country": {
                    "description": "Extensions for country"
                  },
                  "period": {
                    "description": "Time period when address was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "patternAge": {
                "description": "A duration of time during which an organism (or a process) has existed.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternAnnotation": {
                "description": "A  text note which also  contains information about who made the statement and when.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "authorReference": {
                    "description": "The individual responsible for making the annotation."
                  },
                  "authorString": {
                    "description": "The individual responsible for making the annotation.",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_authorString": {
                    "description": "Extensions for authorString"
                  },
                  "time": {
                    "description": "Indicates when this particular annotation was made."
                  },
                  "_time": {
                    "description": "Extensions for time"
                  },
                  "text": {
                    "description": "The text of the annotation in markdown format."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "patternAttachment": {
                "description": "For referring to data content defined in other formats.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
                  },
                  "_contentType": {
                    "description": "Extensions for contentType"
                  },
                  "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47."
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  },
                  "url": {
                    "description": "A location where the data can be accessed."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
                  },
                  "_size": {
                    "description": "Extensions for size"
                  },
                  "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64."
                  },
                  "_hash": {
                    "description": "Extensions for hash"
                  },
                  "title": {
                    "description": "A label or set of text to display in place of the data."
                  },
                  "_title": {
                    "description": "Extensions for title"
                  },
                  "creation": {
                    "description": "The date that the attachment was first created."
                  },
                  "_creation": {
                    "description": "Extensions for creation"
                  }
                },
                "additionalProperties": false
              },
              "patternCodeableConcept": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "patternCoding": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "patternContactPoint": {
                "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                    "enum": [
                      "phone",
                      "fax",
                      "email",
                      "pager",
                      "url",
                      "sms",
                      "other"
                    ]
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "use": {
                    "description": "Identifies the purpose for the contact point.",
                    "enum": ["home", "work", "temp", "old", "mobile"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
                  },
                  "_rank": {
                    "description": "Extensions for rank"
                  },
                  "period": {
                    "description": "Time period when the contact point was/is in use."
                  }
                },
                "additionalProperties": false
              },
              "patternCount": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternDistance": {
                "description": "A length - a value with a unit that is a physical distance.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternDuration": {
                "description": "A length of time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternHumanName": {
                "description": "A human's name with the ability to identify parts and usage.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "Identifies the purpose for this name.",
                    "enum": [
                      "usual",
                      "official",
                      "temp",
                      "nickname",
                      "anonymous",
                      "old",
                      "maiden"
                    ]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
                  },
                  "_family": {
                    "description": "Extensions for family"
                  },
                  "given": {
                    "description": "Given name.",
                    "items": {},
                    "type": "array"
                  },
                  "_given": {
                    "description": "Extensions for given",
                    "items": {},
                    "type": "array"
                  },
                  "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_prefix": {
                    "description": "Extensions for prefix",
                    "items": {},
                    "type": "array"
                  },
                  "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
                    "items": {},
                    "type": "array"
                  },
                  "_suffix": {
                    "description": "Extensions for suffix",
                    "items": {},
                    "type": "array"
                  },
                  "period": {
                    "description": "Indicates the period of time when this name was valid for the named person."
                  }
                },
                "additionalProperties": false
              },
              "patternIdentifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "patternMoney": {
                "description": "An amount of economic utility in some recognized currency.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "Numerical value (with implicit precision)."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "currency": {
                    "description": "ISO 4217 Currency Code."
                  },
                  "_currency": {
                    "description": "Extensions for currency"
                  }
                },
                "additionalProperties": false
              },
              "patternPeriod": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "patternQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "patternRange": {
                "description": "A set of ordered Quantities defined by a low and high limit.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "low": {
                    "description": "The low limit. The boundary is inclusive."
                  },
                  "high": {
                    "description": "The high limit. The boundary is inclusive."
                  }
                },
                "additionalProperties": false
              },
              "patternRatio": {
                "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "numerator": {
                    "description": "The value of the numerator."
                  },
                  "denominator": {
                    "description": "The value of the denominator."
                  }
                },
                "additionalProperties": false
              },
              "patternReference": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              },
              "patternSampledData": {
                "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
                  },
                  "period": {
                    "description": "The length of time between sampling times, measured in milliseconds."
                  },
                  "_period": {
                    "description": "Extensions for period"
                  },
                  "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
                  },
                  "_factor": {
                    "description": "Extensions for factor"
                  },
                  "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
                  },
                  "_lowerLimit": {
                    "description": "Extensions for lowerLimit"
                  },
                  "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
                  },
                  "_upperLimit": {
                    "description": "Extensions for upperLimit"
                  },
                  "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once."
                  },
                  "_dimensions": {
                    "description": "Extensions for dimensions"
                  },
                  "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["origin"]
              },
              "patternSignature": {
                "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
                    "items": {},
                    "type": "array"
                  },
                  "when": {
                    "description": "When the digital signature was signed."
                  },
                  "_when": {
                    "description": "Extensions for when"
                  },
                  "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)."
                  },
                  "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature."
                  },
                  "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature."
                  },
                  "_targetFormat": {
                    "description": "Extensions for targetFormat"
                  },
                  "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
                  },
                  "_sigFormat": {
                    "description": "Extensions for sigFormat"
                  },
                  "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
                  },
                  "_data": {
                    "description": "Extensions for data"
                  }
                },
                "additionalProperties": false,
                "required": ["type", "who"]
              },
              "patternTiming": {
                "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "event": {
                    "description": "Identifies specific times when the event occurs.",
                    "items": {},
                    "type": "array"
                  },
                  "_event": {
                    "description": "Extensions for event",
                    "items": {},
                    "type": "array"
                  },
                  "repeat": {
                    "description": "A set of rules that describe when the event is scheduled."
                  },
                  "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
                  }
                },
                "additionalProperties": false
              },
              "patternContactDetail": {
                "description": "Specifies contact information for a person or organization.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of an individual to contact."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternContributor": {
                "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of contributor.",
                    "enum": ["author", "editor", "reviewer", "endorser"]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "The name of the individual or organization responsible for the contribution."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternDataRequirement": {
                "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.",
                    "items": {},
                    "type": "array"
                  },
                  "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed."
                  },
                  "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
                    "items": {},
                    "type": "array"
                  },
                  "_mustSupport": {
                    "description": "Extensions for mustSupport",
                    "items": {},
                    "type": "array"
                  },
                  "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.",
                    "items": {},
                    "type": "array"
                  },
                  "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter)."
                  },
                  "_limit": {
                    "description": "Extensions for limit"
                  },
                  "sort": {
                    "description": "Specifies the order of the results to be returned.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "patternExpression": {
                "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "language": {
                    "description": "The media type of the language for the expression.",
                    "enum": [
                      "text/cql",
                      "text/fhirpath",
                      "application/x-fhir-query"
                    ]
                  },
                  "_language": {
                    "description": "Extensions for language"
                  },
                  "expression": {
                    "description": "An expression in the specified language that returns a value."
                  },
                  "_expression": {
                    "description": "Extensions for expression"
                  },
                  "reference": {
                    "description": "A URI that defines where the expression is found."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  }
                },
                "additionalProperties": false
              },
              "patternParameterDefinition": {
                "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "use": {
                    "description": "Whether the parameter is input or output for the module."
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response."
                  },
                  "_min": {
                    "description": "Extensions for min"
                  },
                  "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response."
                  },
                  "_max": {
                    "description": "Extensions for max"
                  },
                  "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module."
                  },
                  "_documentation": {
                    "description": "Extensions for documentation"
                  },
                  "type": {
                    "description": "The type of the parameter."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."
                  }
                },
                "additionalProperties": false
              },
              "patternRelatedArtifact": {
                "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of relationship to the related artifact.",
                    "enum": [
                      "documentation",
                      "justification",
                      "citation",
                      "predecessor",
                      "successor",
                      "derived-from",
                      "depends-on",
                      "composed-of"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
                  },
                  "_label": {
                    "description": "Extensions for label"
                  },
                  "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
                  },
                  "_citation": {
                    "description": "Extensions for citation"
                  },
                  "url": {
                    "description": "A url for the artifact that can be followed to access the actual content."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
                  },
                  "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
                  }
                },
                "additionalProperties": false
              },
              "patternTriggerDefinition": {
                "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of triggering event.",
                    "enum": [
                      "named-event",
                      "periodic",
                      "data-changed",
                      "data-added",
                      "data-modified",
                      "data-removed",
                      "data-accessed",
                      "data-access-ended"
                    ]
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context."
                  },
                  "_name": {
                    "description": "Extensions for name"
                  },
                  "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger)."
                  },
                  "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_timingDate": {
                    "description": "Extensions for timingDate"
                  },
                  "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_timingDateTime": {
                    "description": "Extensions for timingDateTime"
                  },
                  "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.",
                    "items": {},
                    "type": "array"
                  },
                  "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires."
                  }
                },
                "additionalProperties": false
              },
              "patternUsageContext": {
                "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "code": {
                    "description": "A code that identifies the type of context being specified by this usage context."
                  },
                  "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  },
                  "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
                  }
                },
                "additionalProperties": false,
                "required": ["code"]
              },
              "patternDosage": {
                "description": "Indicates how the medication is/was taken or should be taken by the patient.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted."
                  },
                  "_sequence": {
                    "description": "Extensions for sequence"
                  },
                  "text": {
                    "description": "Free text dosage instructions e.g. SIG."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  },
                  "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").",
                    "items": {},
                    "type": "array"
                  },
                  "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer."
                  },
                  "_patientInstruction": {
                    "description": "Extensions for patientInstruction"
                  },
                  "timing": {
                    "description": "When medication should be administered."
                  },
                  "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean"
                  },
                  "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)."
                  },
                  "site": {
                    "description": "Body site to administer to."
                  },
                  "route": {
                    "description": "How drug should enter body."
                  },
                  "method": {
                    "description": "Technique for administering medication."
                  },
                  "doseAndRate": {
                    "description": "The amount of medication administered.",
                    "items": {},
                    "type": "array"
                  },
                  "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time."
                  },
                  "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration."
                  },
                  "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient."
                  }
                },
                "additionalProperties": false
              },
              "patternMeta": {
                "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
                  },
                  "_versionId": {
                    "description": "Extensions for versionId"
                  },
                  "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed."
                  },
                  "_lastUpdated": {
                    "description": "Extensions for lastUpdated"
                  },
                  "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
                  },
                  "_source": {
                    "description": "Extensions for source"
                  },
                  "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
                    "items": {},
                    "type": "array"
                  },
                  "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
                    "items": {},
                    "type": "array"
                  },
                  "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "description": "A sample value for this element demonstrating the type of information that would typically be found in the element.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "label": {
                      "description": "Describes the purpose of this example amoung the set of examples."
                    },
                    "_label": {
                      "description": "Extensions for label"
                    },
                    "valueBase64Binary": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element.",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAge": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAnnotation": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueAttachment": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCodeableConcept": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCoding": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContactPoint": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueCount": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDistance": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDuration": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueHumanName": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueIdentifier": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueMoney": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valuePeriod": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueQuantity": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRange": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRatio": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueReference": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueSampledData": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueSignature": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueTiming": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContactDetail": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueContributor": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDataRequirement": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueExpression": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueParameterDefinition": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueRelatedArtifact": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueTriggerDefinition": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueUsageContext": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueDosage": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    },
                    "valueMeta": {
                      "description": "The actual value for the element, which must be one of the types allowed for this element."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "minValueDate": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_minValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueDateTime": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_minValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueInstant": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_minValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueTime": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_minValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueDecimal": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_minValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueInteger": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_minValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValuePositiveInt": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_minValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueUnsignedInt": {
                "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_minValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "minValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDate": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_maxValueDate": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDateTime": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_maxValueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueInstant": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_maxValueInstant": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueTime": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_maxValueTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueDecimal": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_maxValueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueInteger": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_maxValueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValuePositiveInt": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_maxValuePositiveInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueUnsignedInt": {
                "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_maxValueUnsignedInt": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "maxValueQuantity": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "maxLength": {
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number",
                "description": "A whole number"
              },
              "_maxLength": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "condition": {
                "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
                "items": {
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string",
                  "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
                },
                "type": "array"
              },
              "_condition": {
                "description": "Extensions for condition",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "constraint": {
                "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "key": {
                      "description": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality."
                    },
                    "_key": {
                      "description": "Extensions for key"
                    },
                    "requirements": {
                      "description": "Description of why this constraint is necessary or appropriate."
                    },
                    "_requirements": {
                      "description": "Extensions for requirements"
                    },
                    "severity": {
                      "description": "Identifies the impact constraint violation has on the conformance of the instance.",
                      "enum": ["error", "warning"]
                    },
                    "_severity": {
                      "description": "Extensions for severity"
                    },
                    "human": {
                      "description": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated."
                    },
                    "_human": {
                      "description": "Extensions for human"
                    },
                    "expression": {
                      "description": "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met."
                    },
                    "_expression": {
                      "description": "Extensions for expression"
                    },
                    "xpath": {
                      "description": "An XPath expression of constraint that can be executed to see if this constraint is met."
                    },
                    "_xpath": {
                      "description": "Extensions for xpath"
                    },
                    "source": {
                      "description": "A reference to the original source of the constraint, for traceability purposes."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "mustSupport": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_mustSupport": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isModifier": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_isModifier": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isModifierReason": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_isModifierReason": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "isSummary": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_isSummary": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "binding": {
                "description": "Captures constraints on each element within the resource, profile, or extension.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                    "items": {},
                    "type": "array"
                  },
                  "strength": {
                    "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
                    "enum": ["required", "extensible", "preferred", "example"]
                  },
                  "_strength": {
                    "description": "Extensions for strength"
                  },
                  "description": {
                    "description": "Describes the intended use of this particular set of codes."
                  },
                  "_description": {
                    "description": "Extensions for description"
                  },
                  "valueSet": {
                    "description": "Refers to the value set that identifies the set of codes the binding refers to."
                  }
                },
                "additionalProperties": false
              },
              "mapping": {
                "description": "Identifies a concept from an external specification that roughly corresponds to this element.",
                "items": {
                  "description": "Captures constraints on each element within the resource, profile, or extension.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "identity": {
                      "description": "An internal reference to the definition of a mapping."
                    },
                    "_identity": {
                      "description": "Extensions for identity"
                    },
                    "language": {
                      "description": "Identifies the computable language in which mapping.map is expressed."
                    },
                    "_language": {
                      "description": "Extensions for language"
                    },
                    "map": {
                      "description": "Expresses what part of the target specification corresponds to this element."
                    },
                    "_map": {
                      "description": "Extensions for map"
                    },
                    "comment": {
                      "description": "Comments that provide information about the mapping or its use."
                    },
                    "_comment": {
                      "description": "Extensions for comment"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": ["element"]
    },
    "_id": {
      "bsonType": "objectId"
    }
  },
  "additionalProperties": false,
  "required": ["resourceType"]
}
