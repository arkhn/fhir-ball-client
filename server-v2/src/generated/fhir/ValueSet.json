{
  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
  "properties": {
    "resourceType": {
      "description": "This is a ValueSet resource",
      "enum": ["ValueSet"]
    },
    "id": {
      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "versionId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string",
          "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
        },
        "_versionId": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "lastUpdated": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string",
          "description": "An instant in time - known at least to the second"
        },
        "_lastUpdated": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "source": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_source": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "implicitRules": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_implicitRules": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "language": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_language": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "text": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": ["generated", "extensions", "additional", "empty"]
        },
        "_status": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "div": {
          "description": "xhtml - escaped html (see specfication)"
        }
      },
      "additionalProperties": false,
      "required": ["div"]
    },
    "contained": {
      "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "items": {},
      "type": "array"
    },
    "extension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "modifierExtension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "url": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_url": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "identifier": {
      "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
      "items": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": ["usual", "official", "temp", "secondary", "old"]
          },
          "_use": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "system": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "String of characters used to identify a name or a resource"
          },
          "_system": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "value": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_value": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "period": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "assigner": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "version": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_version": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "name": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_name": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "title": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_title": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state.",
      "enum": ["draft", "active", "retired", "unknown"]
    },
    "_status": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "experimental": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "_experimental": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "date": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "_date": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "publisher": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "_publisher": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "contact": {
      "description": "Contact details to assist a user in finding and communicating with the publisher.",
      "items": {
        "description": "Specifies contact information for a person or organization.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "name": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_name": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "telecom": {
            "description": "The contact details for the individual (if a name was provided) or the organization.",
            "items": {
              "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "system": {
                  "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
                  "enum": [
                    "phone",
                    "fax",
                    "email",
                    "pager",
                    "url",
                    "sms",
                    "other"
                  ]
                },
                "_system": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "value": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_value": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "use": {
                  "description": "Identifies the purpose for the contact point.",
                  "enum": ["home", "work", "temp", "old", "mobile"]
                },
                "_use": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "rank": {
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number",
                  "description": "An integer with a value that is positive (e.g. >0)"
                },
                "_rank": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "period": {
                  "description": "A time period defined by a start and end date and optionally time.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "start": {
                      "description": "The start of the period. The boundary is inclusive."
                    },
                    "_start": {
                      "description": "Extensions for start"
                    },
                    "end": {
                      "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                    },
                    "_end": {
                      "description": "Extensions for end"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "description": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_description": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "useContext": {
      "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances.",
      "items": {
        "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "code": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueQuantity": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comparator": {
                "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                "enum": ["<", "<=", ">=", ">"]
              },
              "_comparator": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "unit": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_unit": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueRange": {
            "description": "A set of ordered Quantities defined by a low and high limit.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "low": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              },
              "high": {
                "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                    "enum": ["<", "<=", ">=", ">"]
                  },
                  "_comparator": {
                    "description": "Extensions for comparator"
                  },
                  "unit": {
                    "description": "A human-readable form of the unit."
                  },
                  "_unit": {
                    "description": "Extensions for unit"
                  },
                  "system": {
                    "description": "The identification of the system that provides the coded form of the unit."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "code": {
                    "description": "A computer processable form of the unit in some unit representation system."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["code"]
      },
      "type": "array"
    },
    "jurisdiction": {
      "description": "A legal or geographic region in which the value set is intended to be used.",
      "items": {
        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "coding": {
            "description": "A reference to a code defined by a terminology system.",
            "items": {
              "description": "A reference to a code defined by a terminology system.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "system": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "String of characters used to identify a name or a resource"
                },
                "_system": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "version": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_version": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "code": {
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string",
                  "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
                },
                "_code": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "display": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_display": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "userSelected": {
                  "pattern": "^true|false$",
                  "type": "boolean",
                  "description": "Value of \"true\" or \"false\""
                },
                "_userSelected": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "text": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_text": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "immutable": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "_immutable": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "purpose": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_purpose": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "copyright": {
      "pattern": "^[ \\r\\n\\t\\S]+$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "_copyright": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "compose": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "lockedDate": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string",
          "description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
        },
        "_lockedDate": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "inactive": {
          "pattern": "^true|false$",
          "type": "boolean",
          "description": "Value of \"true\" or \"false\""
        },
        "_inactive": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "include": {
          "description": "Include one or more codes from a code system or other value set(s).",
          "items": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "concept": {
                "description": "Specifies a concept to be included or excluded.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "code": {
                      "description": "Specifies a code for the concept to be included or excluded."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "designation": {
                      "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "filter": {
                "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "property": {
                      "description": "A code that identifies a property or a filter defined in the code system."
                    },
                    "_property": {
                      "description": "Extensions for property"
                    },
                    "op": {
                      "description": "The kind of operation to perform as a part of the filter criteria.",
                      "enum": [
                        "=",
                        "is-a",
                        "descendent-of",
                        "is-not-a",
                        "regex",
                        "in",
                        "not-in",
                        "generalizes",
                        "exists"
                      ]
                    },
                    "_op": {
                      "description": "Extensions for op"
                    },
                    "value": {
                      "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "valueSet": {
                "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.",
                "items": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "exclude": {
          "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.",
          "items": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "concept": {
                "description": "Specifies a concept to be included or excluded.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "code": {
                      "description": "Specifies a code for the concept to be included or excluded."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "designation": {
                      "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "filter": {
                "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "property": {
                      "description": "A code that identifies a property or a filter defined in the code system."
                    },
                    "_property": {
                      "description": "Extensions for property"
                    },
                    "op": {
                      "description": "The kind of operation to perform as a part of the filter criteria.",
                      "enum": [
                        "=",
                        "is-a",
                        "descendent-of",
                        "is-not-a",
                        "regex",
                        "in",
                        "not-in",
                        "generalizes",
                        "exists"
                      ]
                    },
                    "_op": {
                      "description": "Extensions for op"
                    },
                    "value": {
                      "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "valueSet": {
                "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.",
                "items": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "A URI that is a reference to a canonical URL on a FHIR resource"
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": ["include"]
    },
    "expansion": {
      "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "identifier": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_identifier": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "timestamp": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string",
          "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
        },
        "_timestamp": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "total": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number",
          "description": "A whole number"
        },
        "_total": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "offset": {
          "pattern": "^-?([0]|([1-9][0-9]*))$",
          "type": "number",
          "description": "A whole number"
        },
        "_offset": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "parameter": {
          "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
          "items": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_name": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueString": {
                "description": "The value of the parameter.",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueBoolean": {
                "description": "The value of the parameter.",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueInteger": {
                "description": "The value of the parameter.",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueDecimal": {
                "description": "The value of the parameter.",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueUri": {
                "description": "The value of the parameter.",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueCode": {
                "description": "The value of the parameter.",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "valueDateTime": {
                "description": "The value of the parameter.",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "contains": {
          "description": "The codes that are contained in the value set expansion.",
          "items": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "modifierExtension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "abstract": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_abstract": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "inactive": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_inactive": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "designation": {
                "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "language": {
                      "description": "The language this designation is defined for."
                    },
                    "_language": {
                      "description": "Extensions for language"
                    },
                    "use": {
                      "description": "A code that represents types of uses of designations."
                    },
                    "value": {
                      "description": "The text value for this designation."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "contains": {
                "description": "Other codes and entries contained under this entry in the hierarchy.",
                "items": {
                  "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "modifierExtension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "abstract": {
                      "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value."
                    },
                    "_abstract": {
                      "description": "Extensions for abstract"
                    },
                    "inactive": {
                      "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use)."
                    },
                    "_inactive": {
                      "description": "Extensions for inactive"
                    },
                    "version": {
                      "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "The recommended display for this item in the expansion."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "designation": {
                      "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
                      "items": {},
                      "type": "array"
                    },
                    "contains": {
                      "description": "Other codes and entries contained under this entry in the hierarchy.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "_id": {
      "bsonType": "objectId"
    }
  },
  "additionalProperties": false,
  "required": ["resourceType"]
}
