{
  "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
  "properties": {
    "resourceType": {
      "description": "This is a Claim resource",
      "enum": ["Claim"]
    },
    "id": {
      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "versionId": {
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string",
          "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
        },
        "_versionId": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "lastUpdated": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
          "type": "string",
          "description": "An instant in time - known at least to the second"
        },
        "_lastUpdated": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "source": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_source": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "implicitRules": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "_implicitRules": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "language": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_language": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "text": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": ["generated", "extensions", "additional", "empty"]
        },
        "_status": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "div": {
          "description": "xhtml - escaped html (see specfication)"
        }
      },
      "additionalProperties": false,
      "required": ["div"]
    },
    "contained": {
      "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      "items": {},
      "type": "array"
    },
    "extension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "modifierExtension": {
      "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
      "items": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {},
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL."
          },
          "_url": {
            "description": "Extensions for url"
          },
          "valueBase64Binary": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
            "type": "string"
          },
          "_valueBase64Binary": {
            "description": "Extensions for valueBase64Binary"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Extensions for valueBoolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueCanonical": {
            "description": "Extensions for valueCanonical"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "_valueCode": {
            "description": "Extensions for valueCode"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_valueDate": {
            "description": "Extensions for valueDate"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "_valueDateTime": {
            "description": "Extensions for valueDateTime"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "_valueDecimal": {
            "description": "Extensions for valueDecimal"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "_valueId": {
            "description": "Extensions for valueId"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "_valueInstant": {
            "description": "Extensions for valueInstant"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "_valueInteger": {
            "description": "Extensions for valueInteger"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueMarkdown": {
            "description": "Extensions for valueMarkdown"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "_valueOid": {
            "description": "Extensions for valueOid"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "_valuePositiveInt": {
            "description": "Extensions for valuePositiveInt"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Extensions for valueString"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "_valueTime": {
            "description": "Extensions for valueTime"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "_valueUnsignedInt": {
            "description": "Extensions for valueUnsignedInt"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUri": {
            "description": "Extensions for valueUri"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "_valueUrl": {
            "description": "Extensions for valueUrl"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "_valueUuid": {
            "description": "Extensions for valueUuid"
          },
          "valueAddress": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAge": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAnnotation": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueAttachment": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactPoint": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueCount": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDistance": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDuration": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueHumanName": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueIdentifier": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMoney": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueQuantity": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRange": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRatio": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueReference": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSampledData": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueSignature": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTiming": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContactDetail": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueContributor": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDataRequirement": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueExpression": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueParameterDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueRelatedArtifact": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueTriggerDefinition": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueUsageContext": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueDosage": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          },
          "valueMeta": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "identifier": {
      "description": "A unique identifier assigned to this claim.",
      "items": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": ["usual", "official", "temp", "secondary", "old"]
          },
          "_use": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "system": {
            "pattern": "^\\S*$",
            "type": "string",
            "description": "String of characters used to identify a name or a resource"
          },
          "_system": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "value": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_value": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "period": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "assigner": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "status": {
      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "_status": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "type": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "text": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_text": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "subType": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "text": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_text": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "use": {
      "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
      "enum": ["claim", "preauthorization", "predetermination"]
    },
    "_use": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "patient": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "billablePeriod": {
      "description": "A time period defined by a start and end date and optionally time.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "start": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string",
          "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
        },
        "_start": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "end": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string",
          "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
        },
        "_end": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "created": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "_created": {
      "description": "Base definition for all elements in a resource.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "enterer": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "insurer": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "provider": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "priority": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "text": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_text": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "fundsReserve": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "description": "A reference to a code defined by a terminology system.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_version": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "userSelected": {
                "pattern": "^true|false$",
                "type": "boolean",
                "description": "Value of \"true\" or \"false\""
              },
              "_userSelected": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "text": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_text": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "related": {
      "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "claim": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "relationship": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "reference": {
            "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "use": {
                "description": "The purpose of this identifier.",
                "enum": ["usual", "official", "temp", "secondary", "old"]
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "value": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "assigner": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "prescription": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "originalPrescription": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "payee": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "type": {
          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "coding": {
              "description": "A reference to a code defined by a terminology system.",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "text": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_text": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "party": {
          "description": "A reference from one resource to another.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "reference": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_reference": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_type": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "identifier": {
              "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "use": {
                  "description": "The purpose of this identifier.",
                  "enum": ["usual", "official", "temp", "secondary", "old"]
                },
                "_use": {
                  "description": "Extensions for use"
                },
                "type": {
                  "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                },
                "system": {
                  "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                },
                "_system": {
                  "description": "Extensions for system"
                },
                "value": {
                  "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                },
                "_value": {
                  "description": "Extensions for value"
                },
                "period": {
                  "description": "Time period during which identifier is/was valid for use."
                },
                "assigner": {
                  "description": "Organization that issued/manages the identifier."
                }
              },
              "additionalProperties": false
            },
            "display": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_display": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": ["type"]
    },
    "referral": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "facility": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "reference": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_reference": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "pattern": "^\\S*$",
          "type": "string",
          "description": "String of characters used to identify a name or a resource"
        },
        "_type": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "identifier": {
          "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this identifier.",
              "enum": ["usual", "official", "temp", "secondary", "old"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {},
                  "type": "array"
                },
                "text": {
                  "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                },
                "_text": {
                  "description": "Extensions for text"
                }
              },
              "additionalProperties": false
            },
            "system": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_system": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_value": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            },
            "assigner": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "reference": {
                  "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                },
                "_reference": {
                  "description": "Extensions for reference"
                },
                "type": {
                  "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                },
                "_type": {
                  "description": "Extensions for type"
                },
                "identifier": {
                  "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                },
                "display": {
                  "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                },
                "_display": {
                  "description": "Extensions for display"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "display": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "_display": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "careTeam": {
      "description": "The members of the team who provided the products and services.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "provider": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "responsible": {
            "pattern": "^true|false$",
            "type": "boolean",
            "description": "Value of \"true\" or \"false\""
          },
          "_responsible": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "role": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "qualification": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["provider"]
      },
      "type": "array"
    },
    "supportingInfo": {
      "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "category": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "code": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "timingDate": {
            "description": "The date when or period to which this information refers.",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_timingDate": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "timingPeriod": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueBoolean": {
            "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "_valueBoolean": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "valueString": {
            "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "_valueString": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "valueQuantity": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comparator": {
                "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                "enum": ["<", "<=", ">=", ">"]
              },
              "_comparator": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "unit": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_unit": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueAttachment": {
            "description": "For referring to data content defined in other formats.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "contentType": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_contentType": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "language": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_language": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "data": {
                "type": "string",
                "description": "A stream of bytes"
              },
              "_data": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "url": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "A URI that is a literal reference"
              },
              "_url": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "size": {
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number",
                "description": "An integer with a value that is not negative (e.g. >= 0)"
              },
              "_size": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "hash": {
                "type": "string",
                "description": "A stream of bytes"
              },
              "_hash": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "title": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_title": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "creation": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_creation": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "valueReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "reason": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["category"]
      },
      "type": "array"
    },
    "diagnosis": {
      "description": "Information about diagnoses relevant to the claim items.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "diagnosisCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "diagnosisReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": {
            "description": "When the condition was observed or the relative ranking.",
            "items": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "system": {
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "_system": {
                        "description": "Extensions for system"
                      },
                      "version": {
                        "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "_version": {
                        "description": "Extensions for version"
                      },
                      "code": {
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                      },
                      "_code": {
                        "description": "Extensions for code"
                      },
                      "display": {
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      },
                      "userSelected": {
                        "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                      },
                      "_userSelected": {
                        "description": "Extensions for userSelected"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "text": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_text": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "onAdmission": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "packageCode": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "procedure": {
      "description": "Procedures performed on the patient relevant to the billing items with the claim.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": {
            "description": "When the condition was observed or the relative ranking.",
            "items": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "system": {
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "_system": {
                        "description": "Extensions for system"
                      },
                      "version": {
                        "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "_version": {
                        "description": "Extensions for version"
                      },
                      "code": {
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                      },
                      "_code": {
                        "description": "Extensions for code"
                      },
                      "display": {
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      },
                      "userSelected": {
                        "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                      },
                      "_userSelected": {
                        "description": "Extensions for userSelected"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "text": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_text": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "date": {
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string",
            "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
          },
          "_date": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "procedureCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "procedureReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "udi": {
            "description": "Unique Device Identifiers associated with this line item.",
            "items": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "reference": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_reference": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "String of characters used to identify a name or a resource"
                },
                "_type": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "identifier": {
                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "use": {
                      "description": "The purpose of this identifier.",
                      "enum": ["usual", "official", "temp", "secondary", "old"]
                    },
                    "_use": {
                      "description": "Extensions for use"
                    },
                    "type": {
                      "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                    },
                    "system": {
                      "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "value": {
                      "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "period": {
                      "description": "Time period during which identifier is/was valid for use."
                    },
                    "assigner": {
                      "description": "Organization that issued/manages the identifier."
                    }
                  },
                  "additionalProperties": false
                },
                "display": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_display": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          }
        },
        "additionalProperties": false
      },
      "type": "array"
    },
    "insurance": {
      "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "focal": {
            "pattern": "^true|false$",
            "type": "boolean",
            "description": "Value of \"true\" or \"false\""
          },
          "_focal": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "identifier": {
            "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "use": {
                "description": "The purpose of this identifier.",
                "enum": ["usual", "official", "temp", "secondary", "old"]
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "coding": {
                    "description": "A reference to a code defined by a terminology system.",
                    "items": {},
                    "type": "array"
                  },
                  "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                  },
                  "_text": {
                    "description": "Extensions for text"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "value": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              },
              "assigner": {
                "description": "A reference from one resource to another.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                  },
                  "_reference": {
                    "description": "Extensions for reference"
                  },
                  "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                  },
                  "_type": {
                    "description": "Extensions for type"
                  },
                  "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                  },
                  "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "coverage": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "businessArrangement": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "_businessArrangement": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "preAuthRef": {
            "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
            "items": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "type": "array"
          },
          "_preAuthRef": {
            "description": "Extensions for preAuthRef",
            "items": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "claimResponse": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["coverage"]
      },
      "type": "array"
    },
    "accident": {
      "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "date": {
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
          "type": "string",
          "description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
        },
        "_date": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "coding": {
              "description": "A reference to a code defined by a terminology system.",
              "items": {
                "description": "A reference to a code defined by a terminology system.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                  },
                  "_version": {
                    "description": "Extensions for version"
                  },
                  "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                  },
                  "_code": {
                    "description": "Extensions for code"
                  },
                  "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system."
                  },
                  "_display": {
                    "description": "Extensions for display"
                  },
                  "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                  },
                  "_userSelected": {
                    "description": "Extensions for userSelected"
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "text": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_text": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "locationAddress": {
          "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "use": {
              "description": "The purpose of this address.",
              "enum": ["home", "work", "temp", "old", "billing"]
            },
            "_use": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
              "enum": ["postal", "physical", "both"]
            },
            "_type": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "text": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_text": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "line": {
              "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
              "items": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "type": "array"
            },
            "_line": {
              "description": "Extensions for line",
              "items": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "city": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_city": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "district": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_district": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "state": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_state": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "postalCode": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_postalCode": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "country": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_country": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "period": {
              "description": "A time period defined by a start and end date and optionally time.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "start": {
                  "description": "The start of the period. The boundary is inclusive."
                },
                "_start": {
                  "description": "Extensions for start"
                },
                "end": {
                  "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                },
                "_end": {
                  "description": "Extensions for end"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "locationReference": {
          "description": "A reference from one resource to another.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            },
            "reference": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_reference": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "pattern": "^\\S*$",
              "type": "string",
              "description": "String of characters used to identify a name or a resource"
            },
            "_type": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "identifier": {
              "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "use": {
                  "description": "The purpose of this identifier.",
                  "enum": ["usual", "official", "temp", "secondary", "old"]
                },
                "_use": {
                  "description": "Extensions for use"
                },
                "type": {
                  "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                },
                "system": {
                  "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                },
                "_system": {
                  "description": "Extensions for system"
                },
                "value": {
                  "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                },
                "_value": {
                  "description": "Extensions for value"
                },
                "period": {
                  "description": "Time period during which identifier is/was valid for use."
                },
                "assigner": {
                  "description": "Organization that issued/manages the identifier."
                }
              },
              "additionalProperties": false
            },
            "display": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "_display": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "item": {
      "description": "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details.",
      "items": {
        "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
        "properties": {
          "id": {
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string",
            "description": "A sequence of Unicode characters"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "description": "Optional Extension Element - found in all resources.",
              "properties": {
                "id": {
                  "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {},
                  "type": "array"
                },
                "url": {
                  "description": "Source of the definition for the extension code - a logical name or a URL."
                },
                "_url": {
                  "description": "Extensions for url"
                },
                "valueBase64Binary": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                  "type": "string"
                },
                "_valueBase64Binary": {
                  "description": "Extensions for valueBase64Binary"
                },
                "valueBoolean": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^true|false$",
                  "type": "boolean"
                },
                "_valueBoolean": {
                  "description": "Extensions for valueBoolean"
                },
                "valueCanonical": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueCanonical": {
                  "description": "Extensions for valueCanonical"
                },
                "valueCode": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                  "type": "string"
                },
                "_valueCode": {
                  "description": "Extensions for valueCode"
                },
                "valueDate": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                  "type": "string"
                },
                "_valueDate": {
                  "description": "Extensions for valueDate"
                },
                "valueDateTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                  "type": "string"
                },
                "_valueDateTime": {
                  "description": "Extensions for valueDateTime"
                },
                "valueDecimal": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number"
                },
                "_valueDecimal": {
                  "description": "Extensions for valueDecimal"
                },
                "valueId": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                  "type": "string"
                },
                "_valueId": {
                  "description": "Extensions for valueId"
                },
                "valueInstant": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                  "type": "string"
                },
                "_valueInstant": {
                  "description": "Extensions for valueInstant"
                },
                "valueInteger": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^-?([0]|([1-9][0-9]*))$",
                  "type": "number"
                },
                "_valueInteger": {
                  "description": "Extensions for valueInteger"
                },
                "valueMarkdown": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueMarkdown": {
                  "description": "Extensions for valueMarkdown"
                },
                "valueOid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                  "type": "string"
                },
                "_valueOid": {
                  "description": "Extensions for valueOid"
                },
                "valuePositiveInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number"
                },
                "_valuePositiveInt": {
                  "description": "Extensions for valuePositiveInt"
                },
                "valueString": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string"
                },
                "_valueString": {
                  "description": "Extensions for valueString"
                },
                "valueTime": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                  "type": "string"
                },
                "_valueTime": {
                  "description": "Extensions for valueTime"
                },
                "valueUnsignedInt": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^[0]|([1-9][0-9]*)$",
                  "type": "number"
                },
                "_valueUnsignedInt": {
                  "description": "Extensions for valueUnsignedInt"
                },
                "valueUri": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUri": {
                  "description": "Extensions for valueUri"
                },
                "valueUrl": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^\\S*$",
                  "type": "string"
                },
                "_valueUrl": {
                  "description": "Extensions for valueUrl"
                },
                "valueUuid": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                  "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "_valueUuid": {
                  "description": "Extensions for valueUuid"
                },
                "valueAddress": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAge": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAnnotation": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueAttachment": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCodeableConcept": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCoding": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactPoint": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueCount": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDistance": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDuration": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueHumanName": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueIdentifier": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMoney": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valuePeriod": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueQuantity": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRange": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRatio": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueReference": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSampledData": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueSignature": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTiming": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContactDetail": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueContributor": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDataRequirement": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueExpression": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueParameterDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueRelatedArtifact": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueTriggerDefinition": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueUsageContext": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueDosage": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                },
                "valueMeta": {
                  "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "sequence": {
            "pattern": "^[1-9][0-9]*$",
            "type": "number",
            "description": "An integer with a value that is positive (e.g. >0)"
          },
          "_sequence": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "careTeamSequence": {
            "description": "CareTeam members related to this service or product.",
            "items": {
              "pattern": "^[1-9][0-9]*$",
              "type": "number",
              "description": "An integer with a value that is positive (e.g. >0)"
            },
            "type": "array"
          },
          "_careTeamSequence": {
            "description": "Extensions for careTeamSequence",
            "items": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "diagnosisSequence": {
            "description": "Diagnosis applicable for this service or product.",
            "items": {
              "pattern": "^[1-9][0-9]*$",
              "type": "number",
              "description": "An integer with a value that is positive (e.g. >0)"
            },
            "type": "array"
          },
          "_diagnosisSequence": {
            "description": "Extensions for diagnosisSequence",
            "items": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "procedureSequence": {
            "description": "Procedures applicable for this service or product.",
            "items": {
              "pattern": "^[1-9][0-9]*$",
              "type": "number",
              "description": "An integer with a value that is positive (e.g. >0)"
            },
            "type": "array"
          },
          "_procedureSequence": {
            "description": "Extensions for procedureSequence",
            "items": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "informationSequence": {
            "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
            "items": {
              "pattern": "^[1-9][0-9]*$",
              "type": "number",
              "description": "An integer with a value that is positive (e.g. >0)"
            },
            "type": "array"
          },
          "_informationSequence": {
            "description": "Extensions for informationSequence",
            "items": {
              "description": "Base definition for all elements in a resource.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "revenue": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "category": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "productOrService": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "modifier": {
            "description": "Item typification or modifiers codes to convey additional context for the product or service.",
            "items": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "system": {
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "_system": {
                        "description": "Extensions for system"
                      },
                      "version": {
                        "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "_version": {
                        "description": "Extensions for version"
                      },
                      "code": {
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                      },
                      "_code": {
                        "description": "Extensions for code"
                      },
                      "display": {
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      },
                      "userSelected": {
                        "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                      },
                      "_userSelected": {
                        "description": "Extensions for userSelected"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "text": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_text": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "programCode": {
            "description": "Identifies the program under which this may be recovered.",
            "items": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "system": {
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "_system": {
                        "description": "Extensions for system"
                      },
                      "version": {
                        "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "_version": {
                        "description": "Extensions for version"
                      },
                      "code": {
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                      },
                      "_code": {
                        "description": "Extensions for code"
                      },
                      "display": {
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      },
                      "userSelected": {
                        "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                      },
                      "_userSelected": {
                        "description": "Extensions for userSelected"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "text": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_text": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "servicedDate": {
            "description": "The date or dates when the service or product was supplied, performed or completed.",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "_servicedDate": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "servicedPeriod": {
            "description": "A time period defined by a start and end date and optionally time.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "start": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_start": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "end": {
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string",
                "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
              },
              "_end": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "locationCodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "locationAddress": {
            "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "use": {
                "description": "The purpose of this address.",
                "enum": ["home", "work", "temp", "old", "billing"]
              },
              "_use": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.",
                "enum": ["postal", "physical", "both"]
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "line": {
                "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.",
                "items": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "type": "array"
              },
              "_line": {
                "description": "Extensions for line",
                "items": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "city": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_city": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "district": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_district": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "state": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_state": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "postalCode": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_postalCode": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "country": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_country": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "period": {
                "description": "A time period defined by a start and end date and optionally time.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "start": {
                    "description": "The start of the period. The boundary is inclusive."
                  },
                  "_start": {
                    "description": "Extensions for start"
                  },
                  "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
                  },
                  "_end": {
                    "description": "Extensions for end"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "locationReference": {
            "description": "A reference from one resource to another.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "reference": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_reference": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_type": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "identifier": {
                "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "use": {
                    "description": "The purpose of this identifier.",
                    "enum": ["usual", "official", "temp", "secondary", "old"]
                  },
                  "_use": {
                    "description": "Extensions for use"
                  },
                  "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                  },
                  "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                  },
                  "_system": {
                    "description": "Extensions for system"
                  },
                  "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                  },
                  "_value": {
                    "description": "Extensions for value"
                  },
                  "period": {
                    "description": "Time period during which identifier is/was valid for use."
                  },
                  "assigner": {
                    "description": "Organization that issued/manages the identifier."
                  }
                },
                "additionalProperties": false
              },
              "display": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_display": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "quantity": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "comparator": {
                "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                "enum": ["<", "<=", ">=", ">"]
              },
              "_comparator": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "unit": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_unit": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "system": {
                "pattern": "^\\S*$",
                "type": "string",
                "description": "String of characters used to identify a name or a resource"
              },
              "_system": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_code": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "unitPrice": {
            "description": "An amount of economic utility in some recognized currency.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "currency": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_currency": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "factor": {
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number",
            "description": "A rational number with implicit precision"
          },
          "_factor": {
            "description": "Base definition for all elements in a resource.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "net": {
            "description": "An amount of economic utility in some recognized currency.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "value": {
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number",
                "description": "A rational number with implicit precision"
              },
              "_value": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              },
              "currency": {
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string",
                "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
              },
              "_currency": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "udi": {
            "description": "Unique Device Identifiers associated with this line item.",
            "items": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "reference": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_reference": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "String of characters used to identify a name or a resource"
                },
                "_type": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "identifier": {
                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "use": {
                      "description": "The purpose of this identifier.",
                      "enum": ["usual", "official", "temp", "secondary", "old"]
                    },
                    "_use": {
                      "description": "Extensions for use"
                    },
                    "type": {
                      "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                    },
                    "system": {
                      "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "value": {
                      "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "period": {
                      "description": "Time period during which identifier is/was valid for use."
                    },
                    "assigner": {
                      "description": "Organization that issued/manages the identifier."
                    }
                  },
                  "additionalProperties": false
                },
                "display": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_display": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "bodySite": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
            "properties": {
              "id": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {
                  "description": "Optional Extension Element - found in all resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "url": {
                      "description": "Source of the definition for the extension code - a logical name or a URL."
                    },
                    "_url": {
                      "description": "Extensions for url"
                    },
                    "valueBase64Binary": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                      "type": "string"
                    },
                    "_valueBase64Binary": {
                      "description": "Extensions for valueBase64Binary"
                    },
                    "valueBoolean": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^true|false$",
                      "type": "boolean"
                    },
                    "_valueBoolean": {
                      "description": "Extensions for valueBoolean"
                    },
                    "valueCanonical": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueCanonical": {
                      "description": "Extensions for valueCanonical"
                    },
                    "valueCode": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                      "type": "string"
                    },
                    "_valueCode": {
                      "description": "Extensions for valueCode"
                    },
                    "valueDate": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                      "type": "string"
                    },
                    "_valueDate": {
                      "description": "Extensions for valueDate"
                    },
                    "valueDateTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                      "type": "string"
                    },
                    "_valueDateTime": {
                      "description": "Extensions for valueDateTime"
                    },
                    "valueDecimal": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                      "type": "number"
                    },
                    "_valueDecimal": {
                      "description": "Extensions for valueDecimal"
                    },
                    "valueId": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                      "type": "string"
                    },
                    "_valueId": {
                      "description": "Extensions for valueId"
                    },
                    "valueInstant": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                      "type": "string"
                    },
                    "_valueInstant": {
                      "description": "Extensions for valueInstant"
                    },
                    "valueInteger": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^-?([0]|([1-9][0-9]*))$",
                      "type": "number"
                    },
                    "_valueInteger": {
                      "description": "Extensions for valueInteger"
                    },
                    "valueMarkdown": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueMarkdown": {
                      "description": "Extensions for valueMarkdown"
                    },
                    "valueOid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                      "type": "string"
                    },
                    "_valueOid": {
                      "description": "Extensions for valueOid"
                    },
                    "valuePositiveInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[1-9][0-9]*$",
                      "type": "number"
                    },
                    "_valuePositiveInt": {
                      "description": "Extensions for valuePositiveInt"
                    },
                    "valueString": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[ \\r\\n\\t\\S]+$",
                      "type": "string"
                    },
                    "_valueString": {
                      "description": "Extensions for valueString"
                    },
                    "valueTime": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                      "type": "string"
                    },
                    "_valueTime": {
                      "description": "Extensions for valueTime"
                    },
                    "valueUnsignedInt": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^[0]|([1-9][0-9]*)$",
                      "type": "number"
                    },
                    "_valueUnsignedInt": {
                      "description": "Extensions for valueUnsignedInt"
                    },
                    "valueUri": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUri": {
                      "description": "Extensions for valueUri"
                    },
                    "valueUrl": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^\\S*$",
                      "type": "string"
                    },
                    "_valueUrl": {
                      "description": "Extensions for valueUrl"
                    },
                    "valueUuid": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                      "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                      "type": "string"
                    },
                    "_valueUuid": {
                      "description": "Extensions for valueUuid"
                    },
                    "valueAddress": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAge": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAnnotation": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueAttachment": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCodeableConcept": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCoding": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactPoint": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueCount": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDistance": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDuration": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueHumanName": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueIdentifier": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMoney": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valuePeriod": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueQuantity": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRange": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRatio": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueReference": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSampledData": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueSignature": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTiming": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContactDetail": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueContributor": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDataRequirement": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueExpression": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueParameterDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueRelatedArtifact": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueTriggerDefinition": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueUsageContext": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueDosage": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    },
                    "valueMeta": {
                      "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "coding": {
                "description": "A reference to a code defined by a terminology system.",
                "items": {
                  "description": "A reference to a code defined by a terminology system.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "system": {
                      "description": "The identification of the code system that defines the meaning of the symbol in the code."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "version": {
                      "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                    },
                    "_version": {
                      "description": "Extensions for version"
                    },
                    "code": {
                      "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    },
                    "display": {
                      "description": "A representation of the meaning of the code in the system, following the rules of the system."
                    },
                    "_display": {
                      "description": "Extensions for display"
                    },
                    "userSelected": {
                      "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                    },
                    "_userSelected": {
                      "description": "Extensions for userSelected"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "text": {
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string",
                "description": "A sequence of Unicode characters"
              },
              "_text": {
                "description": "Base definition for all elements in a resource.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "subSite": {
            "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
            "items": {
              "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "coding": {
                  "description": "A reference to a code defined by a terminology system.",
                  "items": {
                    "description": "A reference to a code defined by a terminology system.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "system": {
                        "description": "The identification of the code system that defines the meaning of the symbol in the code."
                      },
                      "_system": {
                        "description": "Extensions for system"
                      },
                      "version": {
                        "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
                      },
                      "_version": {
                        "description": "Extensions for version"
                      },
                      "code": {
                        "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination)."
                      },
                      "_code": {
                        "description": "Extensions for code"
                      },
                      "display": {
                        "description": "A representation of the meaning of the code in the system, following the rules of the system."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      },
                      "userSelected": {
                        "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays)."
                      },
                      "_userSelected": {
                        "description": "Extensions for userSelected"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "text": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_text": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "encounter": {
            "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
            "items": {
              "description": "A reference from one resource to another.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "reference": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_reference": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "pattern": "^\\S*$",
                  "type": "string",
                  "description": "String of characters used to identify a name or a resource"
                },
                "_type": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "identifier": {
                  "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "use": {
                      "description": "The purpose of this identifier.",
                      "enum": ["usual", "official", "temp", "secondary", "old"]
                    },
                    "_use": {
                      "description": "Extensions for use"
                    },
                    "type": {
                      "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
                    },
                    "system": {
                      "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "value": {
                      "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "period": {
                      "description": "Time period during which identifier is/was valid for use."
                    },
                    "assigner": {
                      "description": "Organization that issued/manages the identifier."
                    }
                  },
                  "additionalProperties": false
                },
                "display": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "_display": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type": "array"
          },
          "detail": {
            "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
            "items": {
              "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
              "properties": {
                "id": {
                  "pattern": "^[ \\r\\n\\t\\S]+$",
                  "type": "string",
                  "description": "A sequence of Unicode characters"
                },
                "extension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "modifierExtension": {
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                  "items": {
                    "description": "Optional Extension Element - found in all resources.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "url": {
                        "description": "Source of the definition for the extension code - a logical name or a URL."
                      },
                      "_url": {
                        "description": "Extensions for url"
                      },
                      "valueBase64Binary": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                        "type": "string"
                      },
                      "_valueBase64Binary": {
                        "description": "Extensions for valueBase64Binary"
                      },
                      "valueBoolean": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^true|false$",
                        "type": "boolean"
                      },
                      "_valueBoolean": {
                        "description": "Extensions for valueBoolean"
                      },
                      "valueCanonical": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueCanonical": {
                        "description": "Extensions for valueCanonical"
                      },
                      "valueCode": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                        "type": "string"
                      },
                      "_valueCode": {
                        "description": "Extensions for valueCode"
                      },
                      "valueDate": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                        "type": "string"
                      },
                      "_valueDate": {
                        "description": "Extensions for valueDate"
                      },
                      "valueDateTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                        "type": "string"
                      },
                      "_valueDateTime": {
                        "description": "Extensions for valueDateTime"
                      },
                      "valueDecimal": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                        "type": "number"
                      },
                      "_valueDecimal": {
                        "description": "Extensions for valueDecimal"
                      },
                      "valueId": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                        "type": "string"
                      },
                      "_valueId": {
                        "description": "Extensions for valueId"
                      },
                      "valueInstant": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                        "type": "string"
                      },
                      "_valueInstant": {
                        "description": "Extensions for valueInstant"
                      },
                      "valueInteger": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^-?([0]|([1-9][0-9]*))$",
                        "type": "number"
                      },
                      "_valueInteger": {
                        "description": "Extensions for valueInteger"
                      },
                      "valueMarkdown": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueMarkdown": {
                        "description": "Extensions for valueMarkdown"
                      },
                      "valueOid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                        "type": "string"
                      },
                      "_valueOid": {
                        "description": "Extensions for valueOid"
                      },
                      "valuePositiveInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[1-9][0-9]*$",
                        "type": "number"
                      },
                      "_valuePositiveInt": {
                        "description": "Extensions for valuePositiveInt"
                      },
                      "valueString": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[ \\r\\n\\t\\S]+$",
                        "type": "string"
                      },
                      "_valueString": {
                        "description": "Extensions for valueString"
                      },
                      "valueTime": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                        "type": "string"
                      },
                      "_valueTime": {
                        "description": "Extensions for valueTime"
                      },
                      "valueUnsignedInt": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^[0]|([1-9][0-9]*)$",
                        "type": "number"
                      },
                      "_valueUnsignedInt": {
                        "description": "Extensions for valueUnsignedInt"
                      },
                      "valueUri": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUri": {
                        "description": "Extensions for valueUri"
                      },
                      "valueUrl": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^\\S*$",
                        "type": "string"
                      },
                      "_valueUrl": {
                        "description": "Extensions for valueUrl"
                      },
                      "valueUuid": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                        "type": "string"
                      },
                      "_valueUuid": {
                        "description": "Extensions for valueUuid"
                      },
                      "valueAddress": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAge": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAnnotation": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueAttachment": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCodeableConcept": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCoding": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactPoint": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueCount": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDistance": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDuration": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueHumanName": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueIdentifier": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMoney": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valuePeriod": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueQuantity": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRange": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRatio": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueReference": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSampledData": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueSignature": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTiming": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContactDetail": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueContributor": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDataRequirement": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueExpression": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueParameterDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueRelatedArtifact": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueTriggerDefinition": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueUsageContext": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueDosage": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      },
                      "valueMeta": {
                        "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "sequence": {
                  "pattern": "^[1-9][0-9]*$",
                  "type": "number",
                  "description": "An integer with a value that is positive (e.g. >0)"
                },
                "_sequence": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "revenue": {
                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "coding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "items": {},
                      "type": "array"
                    },
                    "text": {
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    },
                    "_text": {
                      "description": "Extensions for text"
                    }
                  },
                  "additionalProperties": false
                },
                "category": {
                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "coding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "items": {},
                      "type": "array"
                    },
                    "text": {
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    },
                    "_text": {
                      "description": "Extensions for text"
                    }
                  },
                  "additionalProperties": false
                },
                "productOrService": {
                  "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "coding": {
                      "description": "A reference to a code defined by a terminology system.",
                      "items": {},
                      "type": "array"
                    },
                    "text": {
                      "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                    },
                    "_text": {
                      "description": "Extensions for text"
                    }
                  },
                  "additionalProperties": false
                },
                "modifier": {
                  "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                  "items": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "coding": {
                        "description": "A reference to a code defined by a terminology system.",
                        "items": {},
                        "type": "array"
                      },
                      "text": {
                        "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                      },
                      "_text": {
                        "description": "Extensions for text"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "programCode": {
                  "description": "Identifies the program under which this may be recovered.",
                  "items": {
                    "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "coding": {
                        "description": "A reference to a code defined by a terminology system.",
                        "items": {},
                        "type": "array"
                      },
                      "text": {
                        "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
                      },
                      "_text": {
                        "description": "Extensions for text"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "quantity": {
                  "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "value": {
                      "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "comparator": {
                      "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
                      "enum": ["<", "<=", ">=", ">"]
                    },
                    "_comparator": {
                      "description": "Extensions for comparator"
                    },
                    "unit": {
                      "description": "A human-readable form of the unit."
                    },
                    "_unit": {
                      "description": "Extensions for unit"
                    },
                    "system": {
                      "description": "The identification of the system that provides the coded form of the unit."
                    },
                    "_system": {
                      "description": "Extensions for system"
                    },
                    "code": {
                      "description": "A computer processable form of the unit in some unit representation system."
                    },
                    "_code": {
                      "description": "Extensions for code"
                    }
                  },
                  "additionalProperties": false
                },
                "unitPrice": {
                  "description": "An amount of economic utility in some recognized currency.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "value": {
                      "description": "Numerical value (with implicit precision)."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "currency": {
                      "description": "ISO 4217 Currency Code."
                    },
                    "_currency": {
                      "description": "Extensions for currency"
                    }
                  },
                  "additionalProperties": false
                },
                "factor": {
                  "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                  "type": "number",
                  "description": "A rational number with implicit precision"
                },
                "_factor": {
                  "description": "Base definition for all elements in a resource.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "net": {
                  "description": "An amount of economic utility in some recognized currency.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                    },
                    "extension": {
                      "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                      "items": {},
                      "type": "array"
                    },
                    "value": {
                      "description": "Numerical value (with implicit precision)."
                    },
                    "_value": {
                      "description": "Extensions for value"
                    },
                    "currency": {
                      "description": "ISO 4217 Currency Code."
                    },
                    "_currency": {
                      "description": "Extensions for currency"
                    }
                  },
                  "additionalProperties": false
                },
                "udi": {
                  "description": "Unique Device Identifiers associated with this line item.",
                  "items": {
                    "description": "A reference from one resource to another.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "reference": {
                        "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
                      },
                      "_reference": {
                        "description": "Extensions for reference"
                      },
                      "type": {
                        "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
                      },
                      "_type": {
                        "description": "Extensions for type"
                      },
                      "identifier": {
                        "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
                      },
                      "display": {
                        "description": "Plain text narrative that identifies the resource in addition to the resource reference."
                      },
                      "_display": {
                        "description": "Extensions for display"
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "subDetail": {
                  "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
                  "items": {
                    "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
                    "properties": {
                      "id": {
                        "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                      },
                      "extension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                        "items": {},
                        "type": "array"
                      },
                      "modifierExtension": {
                        "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
                        "items": {},
                        "type": "array"
                      },
                      "sequence": {
                        "description": "A number to uniquely identify item entries."
                      },
                      "_sequence": {
                        "description": "Extensions for sequence"
                      },
                      "revenue": {
                        "description": "The type of revenue or cost center providing the product and/or service."
                      },
                      "category": {
                        "description": "Code to identify the general type of benefits under which products and services are provided."
                      },
                      "productOrService": {
                        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item."
                      },
                      "modifier": {
                        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
                        "items": {},
                        "type": "array"
                      },
                      "programCode": {
                        "description": "Identifies the program under which this may be recovered.",
                        "items": {},
                        "type": "array"
                      },
                      "quantity": {
                        "description": "The number of repetitions of a service or product."
                      },
                      "unitPrice": {
                        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."
                      },
                      "factor": {
                        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount."
                      },
                      "_factor": {
                        "description": "Extensions for factor"
                      },
                      "net": {
                        "description": "The quantity times the unit price for an additional service or product or charge."
                      },
                      "udi": {
                        "description": "Unique Device Identifiers associated with this line item.",
                        "items": {},
                        "type": "array"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["productOrService"]
                  },
                  "type": "array"
                }
              },
              "additionalProperties": false,
              "required": ["productOrService"]
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": ["productOrService"]
      },
      "type": "array"
    },
    "total": {
      "description": "An amount of economic utility in some recognized currency.",
      "properties": {
        "id": {
          "pattern": "^[ \\r\\n\\t\\S]+$",
          "type": "string",
          "description": "A sequence of Unicode characters"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "description": "Optional Extension Element - found in all resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
              },
              "extension": {
                "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                "items": {},
                "type": "array"
              },
              "url": {
                "description": "Source of the definition for the extension code - a logical name or a URL."
              },
              "_url": {
                "description": "Extensions for url"
              },
              "valueBase64Binary": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                "type": "string"
              },
              "_valueBase64Binary": {
                "description": "Extensions for valueBase64Binary"
              },
              "valueBoolean": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^true|false$",
                "type": "boolean"
              },
              "_valueBoolean": {
                "description": "Extensions for valueBoolean"
              },
              "valueCanonical": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueCanonical": {
                "description": "Extensions for valueCanonical"
              },
              "valueCode": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                "type": "string"
              },
              "_valueCode": {
                "description": "Extensions for valueCode"
              },
              "valueDate": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                "type": "string"
              },
              "_valueDate": {
                "description": "Extensions for valueDate"
              },
              "valueDateTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                "type": "string"
              },
              "_valueDateTime": {
                "description": "Extensions for valueDateTime"
              },
              "valueDecimal": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                "type": "number"
              },
              "_valueDecimal": {
                "description": "Extensions for valueDecimal"
              },
              "valueId": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                "type": "string"
              },
              "_valueId": {
                "description": "Extensions for valueId"
              },
              "valueInstant": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                "type": "string"
              },
              "_valueInstant": {
                "description": "Extensions for valueInstant"
              },
              "valueInteger": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^-?([0]|([1-9][0-9]*))$",
                "type": "number"
              },
              "_valueInteger": {
                "description": "Extensions for valueInteger"
              },
              "valueMarkdown": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueMarkdown": {
                "description": "Extensions for valueMarkdown"
              },
              "valueOid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                "type": "string"
              },
              "_valueOid": {
                "description": "Extensions for valueOid"
              },
              "valuePositiveInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[1-9][0-9]*$",
                "type": "number"
              },
              "_valuePositiveInt": {
                "description": "Extensions for valuePositiveInt"
              },
              "valueString": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[ \\r\\n\\t\\S]+$",
                "type": "string"
              },
              "_valueString": {
                "description": "Extensions for valueString"
              },
              "valueTime": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                "type": "string"
              },
              "_valueTime": {
                "description": "Extensions for valueTime"
              },
              "valueUnsignedInt": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^[0]|([1-9][0-9]*)$",
                "type": "number"
              },
              "_valueUnsignedInt": {
                "description": "Extensions for valueUnsignedInt"
              },
              "valueUri": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUri": {
                "description": "Extensions for valueUri"
              },
              "valueUrl": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^\\S*$",
                "type": "string"
              },
              "_valueUrl": {
                "description": "Extensions for valueUrl"
              },
              "valueUuid": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                "type": "string"
              },
              "_valueUuid": {
                "description": "Extensions for valueUuid"
              },
              "valueAddress": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContributor": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDataRequirement": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueExpression": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueParameterDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTriggerDefinition": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDosage": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "value": {
          "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
          "type": "number",
          "description": "A rational number with implicit precision"
        },
        "_value": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        },
        "currency": {
          "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
          "type": "string",
          "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
        },
        "_currency": {
          "description": "Base definition for all elements in a resource.",
          "properties": {
            "id": {
              "pattern": "^[ \\r\\n\\t\\S]+$",
              "type": "string",
              "description": "A sequence of Unicode characters"
            },
            "extension": {
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
              "items": {
                "description": "Optional Extension Element - found in all resources.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
                  },
                  "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
                    "items": {},
                    "type": "array"
                  },
                  "url": {
                    "description": "Source of the definition for the extension code - a logical name or a URL."
                  },
                  "_url": {
                    "description": "Extensions for url"
                  },
                  "valueBase64Binary": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$",
                    "type": "string"
                  },
                  "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary"
                  },
                  "valueBoolean": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^true|false$",
                    "type": "boolean"
                  },
                  "_valueBoolean": {
                    "description": "Extensions for valueBoolean"
                  },
                  "valueCanonical": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueCanonical": {
                    "description": "Extensions for valueCanonical"
                  },
                  "valueCode": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
                    "type": "string"
                  },
                  "_valueCode": {
                    "description": "Extensions for valueCode"
                  },
                  "valueDate": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
                    "type": "string"
                  },
                  "_valueDate": {
                    "description": "Extensions for valueDate"
                  },
                  "valueDateTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
                    "type": "string"
                  },
                  "_valueDateTime": {
                    "description": "Extensions for valueDateTime"
                  },
                  "valueDecimal": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
                    "type": "number"
                  },
                  "_valueDecimal": {
                    "description": "Extensions for valueDecimal"
                  },
                  "valueId": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
                    "type": "string"
                  },
                  "_valueId": {
                    "description": "Extensions for valueId"
                  },
                  "valueInstant": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
                    "type": "string"
                  },
                  "_valueInstant": {
                    "description": "Extensions for valueInstant"
                  },
                  "valueInteger": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^-?([0]|([1-9][0-9]*))$",
                    "type": "number"
                  },
                  "_valueInteger": {
                    "description": "Extensions for valueInteger"
                  },
                  "valueMarkdown": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown"
                  },
                  "valueOid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
                    "type": "string"
                  },
                  "_valueOid": {
                    "description": "Extensions for valueOid"
                  },
                  "valuePositiveInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[1-9][0-9]*$",
                    "type": "number"
                  },
                  "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt"
                  },
                  "valueString": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[ \\r\\n\\t\\S]+$",
                    "type": "string"
                  },
                  "_valueString": {
                    "description": "Extensions for valueString"
                  },
                  "valueTime": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
                    "type": "string"
                  },
                  "_valueTime": {
                    "description": "Extensions for valueTime"
                  },
                  "valueUnsignedInt": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^[0]|([1-9][0-9]*)$",
                    "type": "number"
                  },
                  "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt"
                  },
                  "valueUri": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUri": {
                    "description": "Extensions for valueUri"
                  },
                  "valueUrl": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^\\S*$",
                    "type": "string"
                  },
                  "_valueUrl": {
                    "description": "Extensions for valueUrl"
                  },
                  "valueUuid": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                    "type": "string"
                  },
                  "_valueUuid": {
                    "description": "Extensions for valueUuid"
                  },
                  "valueAddress": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAge": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAnnotation": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueAttachment": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCodeableConcept": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCoding": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactPoint": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueCount": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDistance": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDuration": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueHumanName": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueIdentifier": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMoney": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valuePeriod": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueQuantity": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRange": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRatio": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueReference": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSampledData": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueSignature": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTiming": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContactDetail": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueContributor": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDataRequirement": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueExpression": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueParameterDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueRelatedArtifact": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueTriggerDefinition": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueUsageContext": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueDosage": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  },
                  "valueMeta": {
                    "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
                  }
                },
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "_id": {
      "bsonType": "objectId"
    }
  },
  "additionalProperties": false,
  "required": [
    "insurance",
    "provider",
    "patient",
    "type",
    "priority",
    "resourceType"
  ]
}
