/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from '../context'
import * as photon from '@prisma/photon'

declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  JoinInput: {
    // input type
    source?: string | null // String
    target?: string | null // String
  }
  SqlValueInput: {
    // input type
    column?: string | null // String
    joins?: NexusGenInputs['JoinInput'][] | null // [JoinInput!]
    owner?: string | null // String
    table?: string | null // String
  }
  UpdateAttributeInput: {
    // input type
    description?: string | null // String
    mergingScript?: string | null // String
  }
}

export interface NexusGenEnums {
  DatabaseType: photon.DatabaseType
  Role: photon.Role
}

export interface NexusGenRootTypes {
  Attribute: photon.Attribute
  AuthPayload: {
    // root type
    token: string // String!
    user: NexusGenRootTypes['User'] // User!
  }
  Column: photon.Column
  Credential: photon.Credential
  Input: photon.Input
  Join: photon.Join
  Mutation: {}
  Query: {}
  Resource: photon.Resource
  Source: photon.Source
  Template: photon.Template
  User: photon.User
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  JoinInput: NexusGenInputs['JoinInput']
  SqlValueInput: NexusGenInputs['SqlValueInput']
  UpdateAttributeInput: NexusGenInputs['UpdateAttributeInput']
  DatabaseType: NexusGenEnums['DatabaseType']
  Role: NexusGenEnums['Role']
}

export interface NexusGenFieldTypes {
  Attribute: {
    // field return type
    children: NexusGenRootTypes['Attribute'][] // [Attribute!]!
    createdAt: any // DateTime!
    description: string // String!
    fhirType: string // String!
    id: string // ID!
    inputs: NexusGenRootTypes['Input'][] // [Input!]!
    isArray: boolean // Boolean!
    mergingScript: string | null // String
    name: string // String!
    parent: NexusGenRootTypes['Attribute'] | null // Attribute
    resource: NexusGenRootTypes['Resource'] // Resource!
    updatedAt: any // DateTime!
  }
  AuthPayload: {
    // field return type
    token: string // String!
    user: NexusGenRootTypes['User'] // User!
  }
  Column: {
    // field return type
    column: string | null // String
    createdAt: any // DateTime!
    id: string // ID!
    joins: NexusGenRootTypes['Join'][] // [Join!]!
    owner: string | null // String
    table: string | null // String
    updatedAt: any // DateTime!
  }
  Credential: {
    // field return type
    createdAt: any // DateTime!
    database: string // String!
    host: string // String!
    id: string // ID!
    login: string // String!
    model: NexusGenEnums['DatabaseType'] // DatabaseType!
    password: string // String!
    port: string // String!
    source: NexusGenRootTypes['Source'] // Source!
    updatedAt: any // DateTime!
  }
  Input: {
    // field return type
    attribute: NexusGenRootTypes['Attribute'] // Attribute!
    createdAt: any // DateTime!
    id: string // ID!
    script: string // String!
    sqlValue: NexusGenRootTypes['Column'] | null // Column
    staticValue: string | null // String
    updatedAt: any // DateTime!
  }
  Join: {
    // field return type
    createdAt: any // DateTime!
    id: string // ID!
    tables: NexusGenRootTypes['Column'][] // [Column!]!
    updatedAt: any // DateTime!
  }
  Mutation: {
    // field return type
    createAttribute: NexusGenRootTypes['Attribute'] // Attribute!
    createInput: NexusGenRootTypes['Input'] // Input!
    createResource: NexusGenRootTypes['Resource'] // Resource!
    createSource: NexusGenRootTypes['Source'] // Source!
    createTemplate: NexusGenRootTypes['Template'] // Template!
    deleteAttribute: NexusGenRootTypes['Attribute'] // Attribute!
    deleteCredential: NexusGenRootTypes['Credential'] // Credential!
    deleteInput: NexusGenRootTypes['Input'] // Input!
    deleteResource: NexusGenRootTypes['Resource'] // Resource!
    deleteSource: NexusGenRootTypes['Source'] // Source!
    deleteTemplate: NexusGenRootTypes['Template'] // Template!
    login: NexusGenRootTypes['AuthPayload'] // AuthPayload!
    signup: NexusGenRootTypes['AuthPayload'] // AuthPayload!
    updateAttribute: NexusGenRootTypes['Attribute'] // Attribute!
    updateInput: NexusGenRootTypes['Input'] // Input!
    upsertCredential: NexusGenRootTypes['Credential'] // Credential!
  }
  Query: {
    // field return type
    attribute: NexusGenRootTypes['Attribute'] | null // Attribute
    me: NexusGenRootTypes['User'] | null // User
    resource: NexusGenRootTypes['Resource'] | null // Resource
    source: NexusGenRootTypes['Source'] | null // Source
    sources: NexusGenRootTypes['Source'][] | null // [Source!]
    template: NexusGenRootTypes['Template'] | null // Template
    templates: NexusGenRootTypes['Template'][] | null // [Template!]
  }
  Resource: {
    // field return type
    attributes: NexusGenRootTypes['Attribute'][] // [Attribute!]!
    createdAt: any // DateTime!
    fhirType: string // String!
    id: string // ID!
    profile: string | null // String
    source: NexusGenRootTypes['Source'] // Source!
    updatedAt: any // DateTime!
  }
  Source: {
    // field return type
    createdAt: any // DateTime!
    credential: NexusGenRootTypes['Credential'] | null // Credential
    hasOwner: boolean // Boolean!
    id: string // ID!
    mappingProgress: number[] | null // [Int!]
    name: string // String!
    resources: NexusGenRootTypes['Resource'][] // [Resource!]!
    template: NexusGenRootTypes['Template'] // Template!
    updatedAt: any // DateTime!
    version: string | null // String
  }
  Template: {
    // field return type
    createdAt: any // DateTime!
    id: string // ID!
    name: string // String!
    sources: NexusGenRootTypes['Source'][] // [Source!]!
    updatedAt: any // DateTime!
  }
  User: {
    // field return type
    createdAt: any // DateTime!
    email: string // String!
    id: string // ID!
    name: string // String!
    role: NexusGenEnums['Role'] // Role!
    updatedAt: any // DateTime!
  }
}

export interface NexusGenArgTypes {
  Attribute: {
    children: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
    inputs: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
  Column: {
    joins: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
  Join: {
    tables: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
  Mutation: {
    createAttribute: {
      // args
      fhirType: string // String!
      mergingScript?: string | null // String
      name: string // String!
      parentId: string // ID!
    }
    createInput: {
      // args
      attributeId: string // ID!
      sql?: NexusGenInputs['SqlValueInput'] | null // SqlValueInput
      static?: string | null // String
    }
    createResource: {
      // args
      resourceName: string // String!
      sourceId: string // ID!
    }
    createSource: {
      // args
      hasOwner: boolean // Boolean!
      name: string // String!
      templateName: string // String!
    }
    createTemplate: {
      // args
      name: string // String!
    }
    deleteAttribute: {
      // args
      id: string // ID!
    }
    deleteCredential: {
      // args
      id: string // ID!
    }
    deleteInput: {
      // args
      id: string // ID!
    }
    deleteResource: {
      // args
      id: string // ID!
    }
    deleteSource: {
      // args
      name: string // String!
    }
    deleteTemplate: {
      // args
      id: string // ID!
    }
    login: {
      // args
      email: string // String!
      password: string // String!
    }
    signup: {
      // args
      email: string // String!
      name: string // String!
      password: string // String!
    }
    updateAttribute: {
      // args
      attributeId: string // ID!
      data?: NexusGenInputs['UpdateAttributeInput'] | null // UpdateAttributeInput
    }
    upsertCredential: {
      // args
      database: string // String!
      host: string // String!
      login: string // String!
      model: string // String!
      password: string // String!
      port: string // String!
      sourceId: string // ID!
    }
  }
  Query: {
    attribute: {
      // args
      attributeId: string // ID!
    }
    resource: {
      // args
      resourceId: string // ID!
    }
    source: {
      // args
      sourceId: string // ID!
    }
    template: {
      // args
      templateId: string // ID!
    }
  }
  Resource: {
    attributes: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
  Source: {
    resources: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
  Template: {
    sources: {
      // args
      after?: string | null // ID
      before?: string | null // ID
      first?: number | null // Int
      last?: number | null // Int
      skip?: number | null // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames =
  | 'Attribute'
  | 'AuthPayload'
  | 'Column'
  | 'Credential'
  | 'Input'
  | 'Join'
  | 'Mutation'
  | 'Query'
  | 'Resource'
  | 'Source'
  | 'Template'
  | 'User'

export type NexusGenInputNames =
  | 'JoinInput'
  | 'SqlValueInput'
  | 'UpdateAttributeInput'

export type NexusGenEnumNames = 'DatabaseType' | 'Role'

export type NexusGenInterfaceNames = never

export type NexusGenScalarNames =
  | 'Boolean'
  | 'DateTime'
  | 'Float'
  | 'ID'
  | 'Int'
  | 'String'

export type NexusGenUnionNames = never

export interface NexusGenTypes {
  context: Context.Context
  inputTypes: NexusGenInputs
  rootTypes: NexusGenRootTypes
  argTypes: NexusGenArgTypes
  fieldTypes: NexusGenFieldTypes
  allTypes: NexusGenAllTypes
  inheritedFields: NexusGenInheritedFields
  objectNames: NexusGenObjectNames
  inputNames: NexusGenInputNames
  enumNames: NexusGenEnumNames
  interfaceNames: NexusGenInterfaceNames
  scalarNames: NexusGenScalarNames
  unionNames: NexusGenUnionNames
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames']
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames']
  allNamedTypes:
    | NexusGenTypes['allInputTypes']
    | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames']
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string
  > {}
  interface NexusGenPluginSchemaConfig {}
}
